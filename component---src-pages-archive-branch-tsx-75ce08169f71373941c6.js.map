{"version":3,"file":"component---src-pages-archive-branch-tsx-75ce08169f71373941c6.js","mappings":"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","sources":["webpack://isspc-front/./node_modules/@gitgraph/core/lib/branch.js","webpack://isspc-front/./node_modules/@gitgraph/core/lib/branches-order.js","webpack://isspc-front/./node_modules/@gitgraph/core/lib/branches-paths.js","webpack://isspc-front/./node_modules/@gitgraph/core/lib/commit.js","webpack://isspc-front/./node_modules/@gitgraph/core/lib/gitgraph.js","webpack://isspc-front/./node_modules/@gitgraph/core/lib/graph-rows/compact.js","webpack://isspc-front/./node_modules/@gitgraph/core/lib/graph-rows/index.js","webpack://isspc-front/./node_modules/@gitgraph/core/lib/graph-rows/regular.js","webpack://isspc-front/./node_modules/@gitgraph/core/lib/index.js","webpack://isspc-front/./node_modules/@gitgraph/core/lib/mode.js","webpack://isspc-front/./node_modules/@gitgraph/core/lib/orientation.js","webpack://isspc-front/./node_modules/@gitgraph/core/lib/refs.js","webpack://isspc-front/./node_modules/@gitgraph/core/lib/tag.js","webpack://isspc-front/./node_modules/@gitgraph/core/lib/template.js","webpack://isspc-front/./node_modules/@gitgraph/core/lib/user-api/branch-user-api.js","webpack://isspc-front/./node_modules/@gitgraph/core/lib/user-api/gitgraph-user-api.js","webpack://isspc-front/./node_modules/@gitgraph/core/lib/utils.js","webpack://isspc-front/./node_modules/@gitgraph/react/lib/BranchLabel.js","webpack://isspc-front/./node_modules/@gitgraph/react/lib/Tooltip.js","webpack://isspc-front/./node_modules/@gitgraph/react/lib/Dot.js","webpack://isspc-front/./node_modules/@gitgraph/react/lib/Arrow.js","webpack://isspc-front/./node_modules/@gitgraph/react/lib/Message.js","webpack://isspc-front/./node_modules/@gitgraph/react/lib/Tag.js","webpack://isspc-front/./node_modules/@gitgraph/react/lib/Commit.js","webpack://isspc-front/./node_modules/@gitgraph/react/lib/BranchPath.js","webpack://isspc-front/./node_modules/@gitgraph/react/lib/Gitgraph.js","webpack://isspc-front/./node_modules/@gitgraph/react/src/BranchLabel.tsx","webpack://isspc-front/./src/pages/archive/branch.tsx","webpack://isspc-front/./node_modules/theme-ui/dist/theme-ui.esm.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst branch_user_api_1 = require(\"./user-api/branch-user-api\");\nconst DELETED_BRANCH_NAME = \"\";\nexports.DELETED_BRANCH_NAME = DELETED_BRANCH_NAME;\nclass Branch {\n    constructor(options) {\n        this.gitgraph = options.gitgraph;\n        this.name = options.name;\n        this.style = options.style;\n        this.parentCommitHash = options.parentCommitHash;\n        this.commitDefaultOptions = options.commitDefaultOptions || { style: {} };\n        this.onGraphUpdate = options.onGraphUpdate;\n        this.renderLabel = options.renderLabel;\n    }\n    /**\n     * Return the API to manipulate Gitgraph branch as a user.\n     */\n    getUserApi() {\n        return new branch_user_api_1.BranchUserApi(this, this.gitgraph, this.onGraphUpdate);\n    }\n    /**\n     * Return true if branch was deleted.\n     */\n    isDeleted() {\n        return this.name === DELETED_BRANCH_NAME;\n    }\n}\nexports.Branch = Branch;\nfunction createDeletedBranch(gitgraph, style, onGraphUpdate) {\n    return new Branch({\n        name: DELETED_BRANCH_NAME,\n        gitgraph,\n        style,\n        onGraphUpdate,\n    });\n}\nexports.createDeletedBranch = createDeletedBranch;\n//# sourceMappingURL=branch.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass BranchesOrder {\n    constructor(commits, colors, compareFunction) {\n        this.branches = new Set();\n        this.colors = colors;\n        commits.forEach((commit) => this.branches.add(commit.branchToDisplay));\n        if (compareFunction) {\n            this.branches = new Set(Array.from(this.branches).sort(compareFunction));\n        }\n    }\n    /**\n     * Return the order of the given branch name.\n     *\n     * @param branchName Name of the branch\n     */\n    get(branchName) {\n        return Array.from(this.branches).findIndex((branch) => branch === branchName);\n    }\n    /**\n     * Return the color of the given branch.\n     *\n     * @param branchName Name of the branch\n     */\n    getColorOf(branchName) {\n        return this.colors[this.get(branchName) % this.colors.length];\n    }\n}\nexports.BranchesOrder = BranchesOrder;\n//# sourceMappingURL=branches-order.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils_1 = require(\"./utils\");\n/**\n * Calculate branches paths of the graph.\n *\n * It follows the Command pattern:\n * => a class with a single `execute()` public method.\n *\n * Main benefit is we can split computation in smaller steps without\n * passing around parameters (we can rely on private data).\n */\nclass BranchesPathsCalculator {\n    constructor(commits, branches, commitSpacing, isGraphVertical, isGraphReverse, createDeletedBranch) {\n        this.branchesPaths = new Map();\n        this.commits = commits;\n        this.branches = branches;\n        this.commitSpacing = commitSpacing;\n        this.isGraphVertical = isGraphVertical;\n        this.isGraphReverse = isGraphReverse;\n        this.createDeletedBranch = createDeletedBranch;\n    }\n    /**\n     * Compute branches paths for graph.\n     */\n    execute() {\n        this.fromCommits();\n        this.withMergeCommits();\n        return this.smoothBranchesPaths();\n    }\n    /**\n     * Initialize branches paths from calculator's commits.\n     */\n    fromCommits() {\n        this.commits.forEach((commit) => {\n            let branch = this.branches.get(commit.branchToDisplay);\n            if (!branch) {\n                // NB: may not work properly if there are many deleted branches.\n                branch = this.getDeletedBranchInPath() || this.createDeletedBranch();\n            }\n            const path = [];\n            const existingBranchPath = this.branchesPaths.get(branch);\n            const firstParentCommit = this.commits.find(({ hash }) => hash === commit.parents[0]);\n            if (existingBranchPath) {\n                path.push(...existingBranchPath);\n            }\n            else if (firstParentCommit) {\n                // Make branch path starts from parent branch (parent commit).\n                path.push({ x: firstParentCommit.x, y: firstParentCommit.y });\n            }\n            path.push({ x: commit.x, y: commit.y });\n            this.branchesPaths.set(branch, path);\n        });\n    }\n    /**\n     * Insert merge commits points into `branchesPaths`.\n     *\n     * @example\n     *     // Before\n     *     [\n     *       { x: 0, y: 640 },\n     *       { x: 50, y: 560 }\n     *     ]\n     *\n     *     // After\n     *     [\n     *       { x: 0, y: 640 },\n     *       { x: 50, y: 560 },\n     *       { x: 50, y: 560, mergeCommit: true }\n     *     ]\n     */\n    withMergeCommits() {\n        const mergeCommits = this.commits.filter(({ parents }) => parents.length > 1);\n        mergeCommits.forEach((mergeCommit) => {\n            const parentOnOriginBranch = this.commits.find(({ hash }) => {\n                return hash === mergeCommit.parents[1];\n            });\n            if (!parentOnOriginBranch)\n                return;\n            const originBranchName = parentOnOriginBranch.branches\n                ? parentOnOriginBranch.branches[0]\n                : \"\";\n            let branch = this.branches.get(originBranchName);\n            if (!branch) {\n                branch = this.getDeletedBranchInPath();\n                if (!branch) {\n                    // Still no branch? That's strange, we shouldn't set anything.\n                    return;\n                }\n            }\n            const lastPoints = [...(this.branchesPaths.get(branch) || [])];\n            this.branchesPaths.set(branch, [\n                ...lastPoints,\n                { x: mergeCommit.x, y: mergeCommit.y, mergeCommit: true },\n            ]);\n        });\n    }\n    /**\n     * Retrieve deleted branch from calculator's branches paths.\n     */\n    getDeletedBranchInPath() {\n        return Array.from(this.branchesPaths.keys()).find((branch) => branch.isDeleted());\n    }\n    /**\n     * Smooth all paths by putting points on each row.\n     */\n    smoothBranchesPaths() {\n        const branchesPaths = new Map();\n        this.branchesPaths.forEach((points, branch) => {\n            if (points.length <= 1) {\n                branchesPaths.set(branch, [points]);\n                return;\n            }\n            // Cut path on each merge commits\n            // Coordinate[] -> Coordinate[][]\n            if (this.isGraphVertical) {\n                points = points.sort((a, b) => (a.y > b.y ? -1 : 1));\n            }\n            else {\n                points = points.sort((a, b) => (a.x > b.x ? 1 : -1));\n            }\n            if (this.isGraphReverse) {\n                points = points.reverse();\n            }\n            const paths = points.reduce((mem, point, i) => {\n                if (point.mergeCommit) {\n                    mem[mem.length - 1].push(utils_1.pick(point, [\"x\", \"y\"]));\n                    let j = i - 1;\n                    let previousPoint = points[j];\n                    // Find the last point which is not a merge\n                    while (j >= 0 && previousPoint.mergeCommit) {\n                        j--;\n                        previousPoint = points[j];\n                    }\n                    // Start a new array with this point\n                    if (j >= 0) {\n                        mem.push([previousPoint]);\n                    }\n                }\n                else {\n                    mem[mem.length - 1].push(point);\n                }\n                return mem;\n            }, [[]]);\n            if (this.isGraphReverse) {\n                paths.forEach((path) => path.reverse());\n            }\n            // Add intermediate points on each sub paths\n            if (this.isGraphVertical) {\n                paths.forEach((subPath) => {\n                    if (subPath.length <= 1)\n                        return;\n                    const firstPoint = subPath[0];\n                    const lastPoint = subPath[subPath.length - 1];\n                    const column = subPath[1].x;\n                    const branchSize = Math.round(Math.abs(firstPoint.y - lastPoint.y) / this.commitSpacing) - 1;\n                    const branchPoints = branchSize > 0\n                        ? new Array(branchSize).fill(0).map((_, i) => ({\n                            x: column,\n                            y: subPath[0].y - this.commitSpacing * (i + 1),\n                        }))\n                        : [];\n                    const lastSubPaths = branchesPaths.get(branch) || [];\n                    branchesPaths.set(branch, [\n                        ...lastSubPaths,\n                        [firstPoint, ...branchPoints, lastPoint],\n                    ]);\n                });\n            }\n            else {\n                paths.forEach((subPath) => {\n                    if (subPath.length <= 1)\n                        return;\n                    const firstPoint = subPath[0];\n                    const lastPoint = subPath[subPath.length - 1];\n                    const column = subPath[1].y;\n                    const branchSize = Math.round(Math.abs(firstPoint.x - lastPoint.x) / this.commitSpacing) - 1;\n                    const branchPoints = branchSize > 0\n                        ? new Array(branchSize).fill(0).map((_, i) => ({\n                            y: column,\n                            x: subPath[0].x + this.commitSpacing * (i + 1),\n                        }))\n                        : [];\n                    const lastSubPaths = branchesPaths.get(branch) || [];\n                    branchesPaths.set(branch, [\n                        ...lastSubPaths,\n                        [firstPoint, ...branchPoints, lastPoint],\n                    ]);\n                });\n            }\n        });\n        return branchesPaths;\n    }\n}\nexports.BranchesPathsCalculator = BranchesPathsCalculator;\n/**\n * Return a string ready to use in `svg.path.d` from coordinates\n *\n * @param coordinates Collection of coordinates\n */\nfunction toSvgPath(coordinates, isBezier, isVertical) {\n    return coordinates\n        .map((path) => \"M\" +\n        path\n            .map(({ x, y }, i, points) => {\n            if (isBezier &&\n                points.length > 1 &&\n                (i === 1 || i === points.length - 1)) {\n                const previous = points[i - 1];\n                if (isVertical) {\n                    const middleY = (previous.y + y) / 2;\n                    return `C ${previous.x} ${middleY} ${x} ${middleY} ${x} ${y}`;\n                }\n                else {\n                    const middleX = (previous.x + x) / 2;\n                    return `C ${middleX} ${previous.y} ${middleX} ${y} ${x} ${y}`;\n                }\n            }\n            return `L ${x} ${y}`;\n        })\n            .join(\" \")\n            .slice(1))\n        .join(\" \");\n}\nexports.toSvgPath = toSvgPath;\n//# sourceMappingURL=branches-paths.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tag_1 = require(\"./tag\");\n/**\n * Generate a random hash.\n *\n * @return hex string with 40 chars\n */\nconst getRandomHash = () => (Math.random().toString(16).substring(3) +\n    Math.random().toString(16).substring(3) +\n    Math.random().toString(16).substring(3) +\n    Math.random().toString(16).substring(3)).substring(0, 40);\nclass Commit {\n    constructor(options) {\n        /**\n         * Ref names\n         */\n        this.refs = [];\n        /**\n         * Commit x position\n         */\n        this.x = 0;\n        /**\n         * Commit y position\n         */\n        this.y = 0;\n        // Set author & committer\n        let name, email;\n        try {\n            [, name, email] = options.author.match(/(.*) <(.*)>/);\n        }\n        catch (e) {\n            [name, email] = [options.author, \"\"];\n        }\n        this.author = { name, email, timestamp: Date.now() };\n        this.committer = { name, email, timestamp: Date.now() };\n        // Set commit message\n        this.subject = options.subject;\n        this.body = options.body || \"\";\n        // Set commit hash\n        this.hash = options.hash || getRandomHash();\n        this.hashAbbrev = this.hash.substring(0, 7);\n        // Set parent hash\n        this.parents = options.parents ? options.parents : [];\n        this.parentsAbbrev = this.parents.map((commit) => commit.substring(0, 7));\n        // Set style\n        this.style = Object.assign({}, options.style, { message: Object.assign({}, options.style.message), dot: Object.assign({}, options.style.dot) });\n        this.dotText = options.dotText;\n        // Set callbacks\n        this.onClick = () => (options.onClick ? options.onClick(this) : undefined);\n        this.onMessageClick = () => options.onMessageClick ? options.onMessageClick(this) : undefined;\n        this.onMouseOver = () => options.onMouseOver ? options.onMouseOver(this) : undefined;\n        this.onMouseOut = () => options.onMouseOut ? options.onMouseOut(this) : undefined;\n        // Set custom renders\n        this.renderDot = options.renderDot;\n        this.renderMessage = options.renderMessage;\n        this.renderTooltip = options.renderTooltip;\n    }\n    /**\n     * Message\n     */\n    get message() {\n        let message = \"\";\n        if (this.style.message.displayHash) {\n            message += `${this.hashAbbrev} `;\n        }\n        message += this.subject;\n        if (this.style.message.displayAuthor) {\n            message += ` - ${this.author.name} <${this.author.email}>`;\n        }\n        return message;\n    }\n    /**\n     * Branch that should be rendered\n     */\n    get branchToDisplay() {\n        return this.branches ? this.branches[0] : \"\";\n    }\n    setRefs(refs) {\n        this.refs = refs.getNames(this.hash);\n        return this;\n    }\n    setTags(tags, getTagStyle, getTagRender) {\n        this.tags = tags\n            .getNames(this.hash)\n            .map((name) => new tag_1.Tag(name, getTagStyle(name), getTagRender(name), this.style));\n        return this;\n    }\n    setBranches(branches) {\n        this.branches = branches;\n        return this;\n    }\n    setPosition({ x, y }) {\n        this.x = x;\n        this.y = y;\n        return this;\n    }\n    withDefaultColor(color) {\n        const newStyle = Object.assign({}, this.style, { dot: Object.assign({}, this.style.dot), message: Object.assign({}, this.style.message) });\n        if (!newStyle.color)\n            newStyle.color = color;\n        if (!newStyle.dot.color)\n            newStyle.dot.color = color;\n        if (!newStyle.message.color)\n            newStyle.message.color = color;\n        const commit = this.cloneCommit();\n        commit.style = newStyle;\n        return commit;\n    }\n    /**\n     * Ideally, we want Commit to be a [Value Object](https://martinfowler.com/bliki/ValueObject.html).\n     * We started with a mutable class. So we'll refactor that little by little.\n     * This private function is a helper to create a new Commit from existing one.\n     */\n    cloneCommit() {\n        const commit = new Commit({\n            author: `${this.author.name} <${this.author.email}>`,\n            subject: this.subject,\n            style: this.style,\n            body: this.body,\n            hash: this.hash,\n            parents: this.parents,\n            dotText: this.dotText,\n            onClick: this.onClick,\n            onMessageClick: this.onMessageClick,\n            onMouseOver: this.onMouseOver,\n            onMouseOut: this.onMouseOut,\n            renderDot: this.renderDot,\n            renderMessage: this.renderMessage,\n            renderTooltip: this.renderTooltip,\n        });\n        commit.refs = this.refs;\n        commit.branches = this.branches;\n        commit.tags = this.tags;\n        commit.x = this.x;\n        commit.y = this.y;\n        return commit;\n    }\n}\nexports.Commit = Commit;\n//# sourceMappingURL=commit.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst branch_1 = require(\"./branch\");\nconst graph_rows_1 = require(\"./graph-rows\");\nconst mode_1 = require(\"./mode\");\nconst branches_order_1 = require(\"./branches-order\");\nconst template_1 = require(\"./template\");\nconst refs_1 = require(\"./refs\");\nconst branches_paths_1 = require(\"./branches-paths\");\nconst utils_1 = require(\"./utils\");\nconst orientation_1 = require(\"./orientation\");\nconst gitgraph_user_api_1 = require(\"./user-api/gitgraph-user-api\");\nclass GitgraphCore {\n    constructor(options = {}) {\n        this.refs = new refs_1.Refs();\n        this.tags = new refs_1.Refs();\n        this.tagStyles = {};\n        this.tagRenders = {};\n        this.commits = [];\n        this.branches = new Map();\n        this.listeners = [];\n        this.nextTimeoutId = null;\n        this.template = template_1.getTemplate(options.template);\n        // Set a default `master` branch\n        this.currentBranch = this.createBranch(\"master\");\n        // Set all options with default values\n        this.orientation = options.orientation;\n        this.reverseArrow = utils_1.booleanOptionOr(options.reverseArrow, false);\n        this.initCommitOffsetX = utils_1.numberOptionOr(options.initCommitOffsetX, 0);\n        this.initCommitOffsetY = utils_1.numberOptionOr(options.initCommitOffsetY, 0);\n        this.mode = options.mode;\n        this.author = options.author || \"Sergio Flores <saxo-guy@epic.com>\";\n        this.commitMessage =\n            options.commitMessage || \"He doesn't like George Michael! Boooo!\";\n        this.generateCommitHash =\n            typeof options.generateCommitHash === \"function\"\n                ? options.generateCommitHash\n                : () => undefined;\n        this.branchesOrderFunction =\n            typeof options.compareBranchesOrder === \"function\"\n                ? options.compareBranchesOrder\n                : undefined;\n        this.branchLabelOnEveryCommit = utils_1.booleanOptionOr(options.branchLabelOnEveryCommit, false);\n    }\n    get isHorizontal() {\n        return (this.orientation === orientation_1.Orientation.Horizontal ||\n            this.orientation === orientation_1.Orientation.HorizontalReverse);\n    }\n    get isVertical() {\n        return !this.isHorizontal;\n    }\n    get isReverse() {\n        return (this.orientation === orientation_1.Orientation.HorizontalReverse ||\n            this.orientation === orientation_1.Orientation.VerticalReverse);\n    }\n    get shouldDisplayCommitMessage() {\n        return !this.isHorizontal && this.mode !== mode_1.Mode.Compact;\n    }\n    /**\n     * Return the API to manipulate Gitgraph as a user.\n     * Rendering library should give that API to their consumer.\n     */\n    getUserApi() {\n        return new gitgraph_user_api_1.GitgraphUserApi(this, () => this.next());\n    }\n    /**\n     * Add a change listener.\n     * It will be called any time the graph have changed (commit, merge…).\n     *\n     * @param listener A callback to be invoked on every change.\n     * @returns A function to remove this change listener.\n     */\n    subscribe(listener) {\n        this.listeners.push(listener);\n        let isSubscribed = true;\n        return () => {\n            if (!isSubscribed)\n                return;\n            isSubscribed = false;\n            const index = this.listeners.indexOf(listener);\n            this.listeners.splice(index, 1);\n        };\n    }\n    /**\n     * Return all data required for rendering.\n     * Rendering libraries will use this to implement their rendering strategy.\n     */\n    getRenderedData() {\n        const commits = this.computeRenderedCommits();\n        const branchesPaths = this.computeRenderedBranchesPaths(commits);\n        const commitMessagesX = this.computeCommitMessagesX(branchesPaths);\n        this.computeBranchesColor(commits, branchesPaths);\n        return { commits, branchesPaths, commitMessagesX };\n    }\n    createBranch(args) {\n        const defaultParentBranchName = \"HEAD\";\n        let options = {\n            gitgraph: this,\n            name: \"\",\n            parentCommitHash: this.refs.getCommit(defaultParentBranchName),\n            style: this.template.branch,\n            onGraphUpdate: () => this.next(),\n        };\n        if (typeof args === \"string\") {\n            options.name = args;\n            options.parentCommitHash = this.refs.getCommit(defaultParentBranchName);\n        }\n        else {\n            const parentBranchName = args.from\n                ? args.from.name\n                : defaultParentBranchName;\n            const parentCommitHash = this.refs.getCommit(parentBranchName) ||\n                (this.refs.hasCommit(args.from) ? args.from : undefined);\n            args.style = args.style || {};\n            options = Object.assign({}, options, args, { parentCommitHash, style: Object.assign({}, options.style, args.style, { label: Object.assign({}, options.style.label, args.style.label) }) });\n        }\n        const branch = new branch_1.Branch(options);\n        this.branches.set(branch.name, branch);\n        return branch;\n    }\n    /**\n     * Return commits with data for rendering.\n     */\n    computeRenderedCommits() {\n        const branches = this.getBranches();\n        // Commits that are not associated to a branch in `branches`\n        // were in a deleted branch. If the latter was merged beforehand\n        // they are reachable and are rendered. Others are not\n        const reachableUnassociatedCommits = (() => {\n            const unassociatedCommits = new Set(this.commits.reduce((commits, { hash }) => !branches.has(hash) ? [...commits, hash] : commits, []));\n            const tipsOfMergedBranches = this.commits.reduce((tipsOfMergedBranches, commit) => commit.parents.length > 1\n                ? [\n                    ...tipsOfMergedBranches,\n                    ...commit.parents\n                        .slice(1)\n                        .map((parentHash) => this.commits.find(({ hash }) => parentHash === hash)),\n                ]\n                : tipsOfMergedBranches, []);\n            const reachableCommits = new Set();\n            tipsOfMergedBranches.forEach((tip) => {\n                let currentCommit = tip;\n                while (currentCommit && unassociatedCommits.has(currentCommit.hash)) {\n                    reachableCommits.add(currentCommit.hash);\n                    currentCommit =\n                        currentCommit.parents.length > 0\n                            ? this.commits.find(({ hash }) => currentCommit.parents[0] === hash)\n                            : undefined;\n                }\n            });\n            return reachableCommits;\n        })();\n        const commitsToRender = this.commits.filter(({ hash }) => branches.has(hash) || reachableUnassociatedCommits.has(hash));\n        const commitsWithBranches = commitsToRender.map((commit) => this.withBranches(branches, commit));\n        const rows = graph_rows_1.createGraphRows(this.mode, commitsToRender);\n        const branchesOrder = new branches_order_1.BranchesOrder(commitsWithBranches, this.template.colors, this.branchesOrderFunction);\n        return (commitsWithBranches\n            .map((commit) => commit.setRefs(this.refs))\n            .map((commit) => this.withPosition(rows, branchesOrder, commit))\n            // Fallback commit computed color on branch color.\n            .map((commit) => commit.withDefaultColor(this.getBranchDefaultColor(branchesOrder, commit.branchToDisplay)))\n            // Tags need commit style to be computed (with default color).\n            .map((commit) => commit.setTags(this.tags, (name) => Object.assign({}, this.tagStyles[name], this.template.tag), (name) => this.tagRenders[name])));\n    }\n    /**\n     * Return branches paths with all data required for rendering.\n     *\n     * @param commits List of commits with rendering data computed\n     */\n    computeRenderedBranchesPaths(commits) {\n        return new branches_paths_1.BranchesPathsCalculator(commits, this.branches, this.template.commit.spacing, this.isVertical, this.isReverse, () => branch_1.createDeletedBranch(this, this.template.branch, () => this.next())).execute();\n    }\n    /**\n     * Set branches colors based on branches paths.\n     *\n     * @param commits List of graph commits\n     * @param branchesPaths Branches paths to be rendered\n     */\n    computeBranchesColor(commits, branchesPaths) {\n        const branchesOrder = new branches_order_1.BranchesOrder(commits, this.template.colors, this.branchesOrderFunction);\n        Array.from(branchesPaths).forEach(([branch]) => {\n            branch.computedColor =\n                branch.style.color ||\n                    this.getBranchDefaultColor(branchesOrder, branch.name);\n        });\n    }\n    /**\n     * Return commit messages X position for rendering.\n     *\n     * @param branchesPaths Branches paths to be rendered\n     */\n    computeCommitMessagesX(branchesPaths) {\n        const numberOfColumns = Array.from(branchesPaths).length;\n        return numberOfColumns * this.template.branch.spacing;\n    }\n    /**\n     * Add `branches` property to commit.\n     *\n     * @param branches All branches mapped by commit hash\n     * @param commit Commit\n     */\n    withBranches(branches, commit) {\n        let commitBranches = Array.from((branches.get(commit.hash) || new Set()).values());\n        if (commitBranches.length === 0) {\n            // No branch => branch has been deleted.\n            commitBranches = [branch_1.DELETED_BRANCH_NAME];\n        }\n        return commit.setBranches(commitBranches);\n    }\n    /**\n     * Get all branches from current commits.\n     */\n    getBranches() {\n        const result = new Map();\n        const queue = [];\n        const branches = this.refs.getAllNames().filter((name) => name !== \"HEAD\");\n        branches.forEach((branch) => {\n            const commitHash = this.refs.getCommit(branch);\n            if (commitHash) {\n                queue.push(commitHash);\n            }\n            while (queue.length > 0) {\n                const currentHash = queue.pop();\n                const current = this.commits.find(({ hash }) => hash === currentHash);\n                const prevBranches = result.get(currentHash) || new Set();\n                prevBranches.add(branch);\n                result.set(currentHash, prevBranches);\n                if (current && current.parents && current.parents.length > 0) {\n                    queue.push(current.parents[0]);\n                }\n            }\n        });\n        return result;\n    }\n    /**\n     * Add position to given commit.\n     *\n     * @param rows Graph rows\n     * @param branchesOrder Computed order of branches\n     * @param commit Commit to position\n     */\n    withPosition(rows, branchesOrder, commit) {\n        const row = rows.getRowOf(commit.hash);\n        const maxRow = rows.getMaxRow();\n        const order = branchesOrder.get(commit.branchToDisplay);\n        switch (this.orientation) {\n            default:\n                return commit.setPosition({\n                    x: this.initCommitOffsetX + this.template.branch.spacing * order,\n                    y: this.initCommitOffsetY +\n                        this.template.commit.spacing * (maxRow - row),\n                });\n            case orientation_1.Orientation.VerticalReverse:\n                return commit.setPosition({\n                    x: this.initCommitOffsetX + this.template.branch.spacing * order,\n                    y: this.initCommitOffsetY + this.template.commit.spacing * row,\n                });\n            case orientation_1.Orientation.Horizontal:\n                return commit.setPosition({\n                    x: this.initCommitOffsetX + this.template.commit.spacing * row,\n                    y: this.initCommitOffsetY + this.template.branch.spacing * order,\n                });\n            case orientation_1.Orientation.HorizontalReverse:\n                return commit.setPosition({\n                    x: this.initCommitOffsetX +\n                        this.template.commit.spacing * (maxRow - row),\n                    y: this.initCommitOffsetY + this.template.branch.spacing * order,\n                });\n        }\n    }\n    /**\n     * Return the default color for given branch.\n     *\n     * @param branchesOrder Computed order of branches\n     * @param branchName Name of the branch\n     */\n    getBranchDefaultColor(branchesOrder, branchName) {\n        return branchesOrder.getColorOf(branchName);\n    }\n    /**\n     * Tell each listener something new happened.\n     * E.g. a rendering library will know it needs to re-render the graph.\n     */\n    next() {\n        if (this.nextTimeoutId) {\n            window.clearTimeout(this.nextTimeoutId);\n        }\n        // Use setTimeout() with `0` to debounce call to next tick.\n        this.nextTimeoutId = window.setTimeout(() => {\n            this.listeners.forEach((listener) => listener(this.getRenderedData()));\n        }, 0);\n    }\n}\nexports.GitgraphCore = GitgraphCore;\n//# sourceMappingURL=gitgraph.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst regular_1 = require(\"./regular\");\nclass CompactGraphRows extends regular_1.RegularGraphRows {\n    computeRowsFromCommits(commits) {\n        commits.forEach((commit, i) => {\n            let newRow = i;\n            const isFirstCommit = i === 0;\n            if (!isFirstCommit) {\n                const parentRow = this.getRowOf(commit.parents[0]);\n                const historyParent = commits[i - 1];\n                newRow = Math.max(parentRow + 1, this.getRowOf(historyParent.hash));\n                const isMergeCommit = commit.parents.length > 1;\n                if (isMergeCommit) {\n                    // Push commit to next row to avoid collision when the branch in which\n                    // the merge happens has more commits than the merged branch.\n                    const mergeTargetParentRow = this.getRowOf(commit.parents[1]);\n                    if (parentRow < mergeTargetParentRow)\n                        newRow++;\n                }\n            }\n            this.rows.set(commit.hash, newRow);\n        });\n    }\n}\nexports.CompactGraphRows = CompactGraphRows;\n//# sourceMappingURL=compact.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst mode_1 = require(\"../mode\");\nconst compact_1 = require(\"./compact\");\nconst regular_1 = require(\"./regular\");\nexports.GraphRows = regular_1.RegularGraphRows;\nfunction createGraphRows(mode, commits) {\n    return mode === mode_1.Mode.Compact\n        ? new compact_1.CompactGraphRows(commits)\n        : new regular_1.RegularGraphRows(commits);\n}\nexports.createGraphRows = createGraphRows;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass RegularGraphRows {\n    constructor(commits) {\n        this.rows = new Map();\n        this.maxRowCache = undefined;\n        this.computeRowsFromCommits(commits);\n    }\n    getRowOf(commitHash) {\n        return this.rows.get(commitHash) || 0;\n    }\n    getMaxRow() {\n        if (this.maxRowCache === undefined) {\n            this.maxRowCache = uniq(Array.from(this.rows.values())).length - 1;\n        }\n        return this.maxRowCache;\n    }\n    computeRowsFromCommits(commits) {\n        commits.forEach((commit, i) => {\n            this.rows.set(commit.hash, i);\n        });\n        this.maxRowCache = undefined;\n    }\n}\nexports.RegularGraphRows = RegularGraphRows;\n/**\n * Creates a duplicate-free version of an array.\n *\n * Don't use lodash's `uniq` as it increased bundlesize a lot for such a\n * simple function.\n * => The way we bundle for browser seems not to work with `lodash-es`.\n * => I didn't to get tree-shaking to work with `lodash` (the CommonJS version).\n *\n * @param array Array of values\n */\nfunction uniq(array) {\n    const set = new Set();\n    array.forEach((value) => set.add(value));\n    return Array.from(set);\n}\n//# sourceMappingURL=regular.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gitgraph_1 = require(\"./gitgraph\");\nexports.GitgraphCore = gitgraph_1.GitgraphCore;\nvar mode_1 = require(\"./mode\");\nexports.Mode = mode_1.Mode;\nvar gitgraph_user_api_1 = require(\"./user-api/gitgraph-user-api\");\nexports.GitgraphUserApi = gitgraph_user_api_1.GitgraphUserApi;\nvar branch_user_api_1 = require(\"./user-api/branch-user-api\");\nexports.BranchUserApi = branch_user_api_1.BranchUserApi;\nvar branch_1 = require(\"./branch\");\nexports.Branch = branch_1.Branch;\nvar commit_1 = require(\"./commit\");\nexports.Commit = commit_1.Commit;\nvar tag_1 = require(\"./tag\");\nexports.Tag = tag_1.Tag;\nvar refs_1 = require(\"./refs\");\nexports.Refs = refs_1.Refs;\nvar template_1 = require(\"./template\");\nexports.MergeStyle = template_1.MergeStyle;\nexports.TemplateName = template_1.TemplateName;\nexports.templateExtend = template_1.templateExtend;\nvar orientation_1 = require(\"./orientation\");\nexports.Orientation = orientation_1.Orientation;\nvar branches_paths_1 = require(\"./branches-paths\");\nexports.toSvgPath = branches_paths_1.toSvgPath;\nvar utils_1 = require(\"./utils\");\nexports.arrowSvgPath = utils_1.arrowSvgPath;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Mode;\n(function (Mode) {\n    Mode[\"Compact\"] = \"compact\";\n})(Mode || (Mode = {}));\nexports.Mode = Mode;\n//# sourceMappingURL=mode.js.map","\"use strict\";\n// Extracted from `gitgraph.ts` because it caused `utils` tests to fail\n// because of circular dependency between `utils` and `template`.\n// It's not clear why (the circular dependency still exist) but `Orientation`\n// was the only one causing issue. Maybe because it's an enum?\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Orientation;\n(function (Orientation) {\n    Orientation[\"VerticalReverse\"] = \"vertical-reverse\";\n    Orientation[\"Horizontal\"] = \"horizontal\";\n    Orientation[\"HorizontalReverse\"] = \"horizontal-reverse\";\n})(Orientation = exports.Orientation || (exports.Orientation = {}));\n//# sourceMappingURL=orientation.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Refs {\n    constructor() {\n        this.commitPerName = new Map();\n        this.namesPerCommit = new Map();\n    }\n    /**\n     * Set a new reference to a commit hash.\n     *\n     * @param name Name of the ref (ex: \"master\", \"v1.0\")\n     * @param commitHash Commit hash\n     */\n    set(name, commitHash) {\n        const prevCommitHash = this.commitPerName.get(name);\n        if (prevCommitHash) {\n            this.removeNameFrom(prevCommitHash, name);\n        }\n        this.addNameTo(commitHash, name);\n        this.addCommitTo(name, commitHash);\n        return this;\n    }\n    /**\n     * Delete a reference\n     *\n     * @param name Name of the reference\n     */\n    delete(name) {\n        if (this.hasName(name)) {\n            this.removeNameFrom(this.getCommit(name), name);\n            this.commitPerName.delete(name);\n        }\n        return this;\n    }\n    /**\n     * Get the commit hash associated with the given reference name.\n     *\n     * @param name Name of the ref\n     */\n    getCommit(name) {\n        return this.commitPerName.get(name);\n    }\n    /**\n     * Get the list of reference names associated with given commit hash.\n     *\n     * @param commitHash Commit hash\n     */\n    getNames(commitHash) {\n        return this.namesPerCommit.get(commitHash) || [];\n    }\n    /**\n     * Get all reference names known.\n     */\n    getAllNames() {\n        return Array.from(this.commitPerName.keys());\n    }\n    /**\n     * Returns true if given commit hash is referenced.\n     *\n     * @param commitHash Commit hash\n     */\n    hasCommit(commitHash) {\n        return this.namesPerCommit.has(commitHash);\n    }\n    /**\n     * Returns true if given reference name exists.\n     *\n     * @param name Name of the ref\n     */\n    hasName(name) {\n        return this.commitPerName.has(name);\n    }\n    removeNameFrom(commitHash, nameToRemove) {\n        const names = this.namesPerCommit.get(commitHash) || [];\n        this.namesPerCommit.set(commitHash, names.filter((name) => name !== nameToRemove));\n    }\n    addNameTo(commitHash, nameToAdd) {\n        const prevNames = this.namesPerCommit.get(commitHash) || [];\n        this.namesPerCommit.set(commitHash, [...prevNames, nameToAdd]);\n    }\n    addCommitTo(name, commitHashToAdd) {\n        this.commitPerName.set(name, commitHashToAdd);\n    }\n}\nexports.Refs = Refs;\n//# sourceMappingURL=refs.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst template_1 = require(\"./template\");\nconst utils_1 = require(\"./utils\");\nclass Tag {\n    constructor(name, style, render, commitStyle) {\n        this.name = name;\n        this.tagStyle = style;\n        this.commitStyle = commitStyle;\n        this.render = render;\n    }\n    /**\n     * Style\n     */\n    get style() {\n        return {\n            strokeColor: this.tagStyle.strokeColor || this.commitStyle.color,\n            bgColor: this.tagStyle.bgColor || this.commitStyle.color,\n            color: this.tagStyle.color || \"white\",\n            font: this.tagStyle.font || this.commitStyle.message.font || template_1.DEFAULT_FONT,\n            borderRadius: utils_1.numberOptionOr(this.tagStyle.borderRadius, 10),\n            pointerWidth: utils_1.numberOptionOr(this.tagStyle.pointerWidth, 12),\n        };\n    }\n}\nexports.Tag = Tag;\n//# sourceMappingURL=tag.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils_1 = require(\"./utils\");\n/**\n * Branch merge style enum\n */\nvar MergeStyle;\n(function (MergeStyle) {\n    MergeStyle[\"Bezier\"] = \"bezier\";\n    MergeStyle[\"Straight\"] = \"straight\";\n})(MergeStyle || (MergeStyle = {}));\nexports.MergeStyle = MergeStyle;\nexports.DEFAULT_FONT = \"normal 12pt Calibri\";\n/**\n * Gitgraph template\n *\n * Set of design rules for the rendering.\n */\nclass Template {\n    constructor(options) {\n        // Options\n        options.branch = options.branch || {};\n        options.branch.label = options.branch.label || {};\n        options.arrow = options.arrow || {};\n        options.commit = options.commit || {};\n        options.commit.dot = options.commit.dot || {};\n        options.commit.message = options.commit.message || {};\n        // One color per column\n        this.colors = options.colors || [\"#000000\"];\n        // Branch style\n        this.branch = {\n            color: options.branch.color,\n            lineWidth: options.branch.lineWidth || 2,\n            mergeStyle: options.branch.mergeStyle || MergeStyle.Bezier,\n            spacing: utils_1.numberOptionOr(options.branch.spacing, 20),\n            label: {\n                display: utils_1.booleanOptionOr(options.branch.label.display, true),\n                color: options.branch.label.color || options.commit.color,\n                strokeColor: options.branch.label.strokeColor || options.commit.color,\n                bgColor: options.branch.label.bgColor || \"white\",\n                font: options.branch.label.font ||\n                    options.commit.message.font ||\n                    exports.DEFAULT_FONT,\n                borderRadius: utils_1.numberOptionOr(options.branch.label.borderRadius, 10),\n            },\n        };\n        // Arrow style\n        this.arrow = {\n            size: options.arrow.size || null,\n            color: options.arrow.color || null,\n            offset: options.arrow.offset || 2,\n        };\n        // Commit style\n        this.commit = {\n            color: options.commit.color,\n            spacing: utils_1.numberOptionOr(options.commit.spacing, 25),\n            hasTooltipInCompactMode: utils_1.booleanOptionOr(options.commit.hasTooltipInCompactMode, true),\n            dot: {\n                color: options.commit.dot.color || options.commit.color,\n                size: options.commit.dot.size || 3,\n                strokeWidth: utils_1.numberOptionOr(options.commit.dot.strokeWidth, 0),\n                strokeColor: options.commit.dot.strokeColor,\n                font: options.commit.dot.font ||\n                    options.commit.message.font ||\n                    \"normal 10pt Calibri\",\n            },\n            message: {\n                display: utils_1.booleanOptionOr(options.commit.message.display, true),\n                displayAuthor: utils_1.booleanOptionOr(options.commit.message.displayAuthor, true),\n                displayHash: utils_1.booleanOptionOr(options.commit.message.displayHash, true),\n                color: options.commit.message.color || options.commit.color,\n                font: options.commit.message.font || exports.DEFAULT_FONT,\n            },\n        };\n        // Tag style\n        // This one is computed in the Tag instance. It needs Commit style\n        // that is partially computed at runtime (for colors).\n        this.tag = options.tag || {};\n    }\n}\nexports.Template = Template;\n/**\n * Black arrow template\n */\nconst blackArrowTemplate = new Template({\n    colors: [\"#6963FF\", \"#47E8D4\", \"#6BDB52\", \"#E84BA5\", \"#FFA657\"],\n    branch: {\n        color: \"#000000\",\n        lineWidth: 4,\n        spacing: 50,\n        mergeStyle: MergeStyle.Straight,\n    },\n    commit: {\n        spacing: 60,\n        dot: {\n            size: 16,\n            strokeColor: \"#000000\",\n            strokeWidth: 4,\n        },\n        message: {\n            color: \"black\",\n        },\n    },\n    arrow: {\n        size: 16,\n        offset: -1.5,\n    },\n});\nexports.blackArrowTemplate = blackArrowTemplate;\n/**\n * Metro template\n */\nconst metroTemplate = new Template({\n    colors: [\"#979797\", \"#008fb5\", \"#f1c109\"],\n    branch: {\n        lineWidth: 10,\n        spacing: 50,\n    },\n    commit: {\n        spacing: 80,\n        dot: {\n            size: 14,\n        },\n        message: {\n            font: \"normal 14pt Arial\",\n        },\n    },\n});\nexports.metroTemplate = metroTemplate;\nvar TemplateName;\n(function (TemplateName) {\n    TemplateName[\"Metro\"] = \"metro\";\n    TemplateName[\"BlackArrow\"] = \"blackarrow\";\n})(TemplateName || (TemplateName = {}));\nexports.TemplateName = TemplateName;\n/**\n * Extend an existing template with new options.\n *\n * @param selectedTemplate Template to extend\n * @param options Template options\n */\nfunction templateExtend(selectedTemplate, options) {\n    const template = getTemplate(selectedTemplate);\n    if (!options.branch)\n        options.branch = {};\n    if (!options.commit)\n        options.commit = {};\n    // This is tedious, but it seems acceptable so we don't need lodash\n    // as we want to keep bundlesize small.\n    return {\n        colors: options.colors || template.colors,\n        arrow: Object.assign({}, template.arrow, options.arrow),\n        branch: Object.assign({}, template.branch, options.branch, { label: Object.assign({}, template.branch.label, options.branch.label) }),\n        commit: Object.assign({}, template.commit, options.commit, { dot: Object.assign({}, template.commit.dot, options.commit.dot), message: Object.assign({}, template.commit.message, options.commit.message) }),\n        tag: Object.assign({}, template.tag, options.tag),\n    };\n}\nexports.templateExtend = templateExtend;\n/**\n * Resolve the template to use regarding given `template` value.\n *\n * @param template Selected template name, or instance.\n */\nfunction getTemplate(template) {\n    if (!template)\n        return metroTemplate;\n    if (typeof template === \"string\") {\n        return {\n            [TemplateName.BlackArrow]: blackArrowTemplate,\n            [TemplateName.Metro]: metroTemplate,\n        }[template];\n    }\n    return template;\n}\nexports.getTemplate = getTemplate;\n//# sourceMappingURL=template.js.map","\"use strict\";\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst commit_1 = require(\"../commit\");\nconst branch_1 = require(\"../branch\");\nconst utils_1 = require(\"../utils\");\nclass BranchUserApi {\n    // tslint:enable:variable-name\n    constructor(branch, graph, onGraphUpdate) {\n        this._branch = branch;\n        this.name = branch.name;\n        this._graph = graph;\n        this._onGraphUpdate = onGraphUpdate;\n    }\n    branch(args) {\n        if (this._branch.isDeleted() && !this._isReferenced()) {\n            throw new Error(`Cannot branch from the deleted branch \"${this.name}\"`);\n        }\n        const options = typeof args === \"string\" ? { name: args } : args;\n        options.from = this;\n        return this._graph.createBranch(options).getUserApi();\n    }\n    commit(options) {\n        if (this._branch.isDeleted() && !this._isReferenced()) {\n            throw new Error(`Cannot commit on the deleted branch \"${this.name}\"`);\n        }\n        // Deal with shorter syntax\n        if (typeof options === \"string\")\n            options = { subject: options };\n        if (!options)\n            options = {};\n        this._commitWithParents(options, []);\n        this._onGraphUpdate();\n        return this;\n    }\n    /**\n     * Delete the branch (as `git branch -d`)\n     */\n    delete() {\n        // Delete all references to the branch from the graph (graph.branches and graph.refs)\n        // and from the commits (commit.refs). Then, make the branch instance a deleted branch.\n        // Like in git, the commits and tags in the deleted branch remain in the graph\n        if (this._graph.refs.getCommit(\"HEAD\") ===\n            this._graph.refs.getCommit(this.name)) {\n            throw new Error(`Cannot delete the checked out branch \"${this.name}\"`);\n        }\n        const branchCommits = (function* (graph, branch) {\n            const lookupCommit = (graph, commitHash) => {\n                return graph.commits.find(({ hash }) => hash === commitHash);\n            };\n            let currentCommit = lookupCommit(graph, graph.refs.getCommit(branch.name));\n            while (currentCommit && currentCommit.hash !== branch.parentCommitHash) {\n                yield currentCommit;\n                currentCommit = lookupCommit(graph, currentCommit.parents[0]);\n            }\n            return;\n        })(this._graph, this._branch);\n        [...branchCommits].forEach((commit) => {\n            commit.refs = commit.refs.filter((branchName) => branchName !== this.name);\n        });\n        this._graph.refs.delete(this.name);\n        this._graph.branches.delete(this.name);\n        this._branch = branch_1.createDeletedBranch(this._graph, this._branch.style, () => {\n            // do nothing\n        });\n        this._onGraphUpdate();\n        return this;\n    }\n    merge(...args) {\n        if (this._branch.isDeleted() && !this._isReferenced()) {\n            throw new Error(`Cannot merge to the deleted branch \"${this.name}\"`);\n        }\n        let options = args[0];\n        if (!isBranchMergeOptions(options)) {\n            options = {\n                branch: args[0],\n                fastForward: false,\n                commitOptions: { subject: args[1] },\n            };\n        }\n        const { branch, fastForward, commitOptions, } = options;\n        const branchName = typeof branch === \"string\" ? branch : branch.name;\n        const branchLastCommitHash = this._graph.refs.getCommit(branchName);\n        if (!branchLastCommitHash) {\n            throw new Error(`The branch called \"${branchName}\" is unknown`);\n        }\n        let canFastForward = false;\n        if (fastForward) {\n            const lastCommitHash = this._graph.refs.getCommit(this._branch.name);\n            if (lastCommitHash) {\n                canFastForward = this._areCommitsConnected(lastCommitHash, branchLastCommitHash);\n            }\n        }\n        if (fastForward && canFastForward) {\n            this._fastForwardTo(branchLastCommitHash);\n        }\n        else {\n            this._commitWithParents(Object.assign({}, commitOptions, { subject: (commitOptions && commitOptions.subject) ||\n                    `Merge branch ${branchName}` }), [branchLastCommitHash]);\n        }\n        this._onGraphUpdate();\n        return this;\n    }\n    tag(options) {\n        if (this._branch.isDeleted() && !this._isReferenced()) {\n            throw new Error(`Cannot tag on the deleted branch \"${this.name}\"`);\n        }\n        if (typeof options === \"string\") {\n            this._graph.getUserApi().tag({ name: options, ref: this._branch.name });\n        }\n        else {\n            this._graph.getUserApi().tag(Object.assign({}, options, { ref: this._branch.name }));\n        }\n        return this;\n    }\n    /**\n     * Checkout onto this branch and update \"HEAD\" in refs\n     */\n    checkout() {\n        if (this._branch.isDeleted() && !this._isReferenced()) {\n            throw new Error(`Cannot checkout the deleted branch \"${this.name}\"`);\n        }\n        const target = this._branch;\n        const headCommit = this._graph.refs.getCommit(target.name);\n        this._graph.currentBranch = target;\n        // Update \"HEAD\" in refs when the target branch is not empty\n        if (headCommit) {\n            this._graph.refs.set(\"HEAD\", headCommit);\n        }\n        return this;\n    }\n    // tslint:disable:variable-name - Prefix `_` = explicitly private for JS users\n    _commitWithParents(options, parents) {\n        const parentOnSameBranch = this._graph.refs.getCommit(this._branch.name);\n        if (parentOnSameBranch) {\n            parents.unshift(parentOnSameBranch);\n        }\n        else if (this._branch.parentCommitHash) {\n            parents.unshift(this._branch.parentCommitHash);\n        }\n        const { tag } = options, commitOptions = __rest(options, [\"tag\"]);\n        const commit = new commit_1.Commit(Object.assign({ hash: this._graph.generateCommitHash(), author: this._branch.commitDefaultOptions.author || this._graph.author, subject: this._branch.commitDefaultOptions.subject ||\n                this._graph.commitMessage }, commitOptions, { parents, style: this._getCommitStyle(options.style) }));\n        if (parentOnSameBranch) {\n            // Take all the refs from the parent\n            const parentRefs = this._graph.refs.getNames(parentOnSameBranch);\n            parentRefs.forEach((ref) => this._graph.refs.set(ref, commit.hash));\n        }\n        else {\n            // Set the branch ref\n            this._graph.refs.set(this._branch.name, commit.hash);\n        }\n        // Add the new commit\n        this._graph.commits.push(commit);\n        // Move HEAD on the last commit\n        this.checkout();\n        // Add a tag to the commit if `option.tag` is provide\n        if (tag)\n            this.tag(tag);\n    }\n    _areCommitsConnected(parentCommitHash, childCommitHash) {\n        const childCommit = this._graph.commits.find(({ hash }) => childCommitHash === hash);\n        if (!childCommit)\n            return false;\n        const isFirstCommitOfGraph = childCommit.parents.length === 0;\n        if (isFirstCommitOfGraph)\n            return false;\n        if (childCommit.parents.includes(parentCommitHash)) {\n            return true;\n        }\n        // `childCommitHash` is not a direct child of `parentCommitHash`.\n        // But maybe one of `childCommitHash` parent is.\n        return childCommit.parents.some((directParentHash) => this._areCommitsConnected(parentCommitHash, directParentHash));\n    }\n    _fastForwardTo(commitHash) {\n        this._graph.refs.set(this._branch.name, commitHash);\n    }\n    _getCommitStyle(style = {}) {\n        return Object.assign({}, utils_1.withoutUndefinedKeys(this._graph.template.commit), utils_1.withoutUndefinedKeys(this._branch.commitDefaultOptions.style), style, { message: Object.assign({}, utils_1.withoutUndefinedKeys(this._graph.template.commit.message), utils_1.withoutUndefinedKeys(this._branch.commitDefaultOptions.style.message), style.message, utils_1.withoutUndefinedKeys({\n                display: this._graph.shouldDisplayCommitMessage && undefined,\n            })), dot: Object.assign({}, utils_1.withoutUndefinedKeys(this._graph.template.commit.dot), utils_1.withoutUndefinedKeys(this._branch.commitDefaultOptions.style.dot), style.dot) });\n    }\n    _isReferenced() {\n        return (this._graph.branches.has(this.name) ||\n            this._graph.refs.hasName(this.name) ||\n            this._graph.commits\n                .reduce((allNames, { refs }) => [...allNames, ...refs], [])\n                .includes(this.name));\n    }\n}\nexports.BranchUserApi = BranchUserApi;\nfunction isBranchMergeOptions(options) {\n    return typeof options === \"object\" && !(options instanceof BranchUserApi);\n}\n//# sourceMappingURL=branch-user-api.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst commit_1 = require(\"../commit\");\nconst branch_1 = require(\"../branch\");\nconst refs_1 = require(\"../refs\");\nclass GitgraphUserApi {\n    // tslint:enable:variable-name\n    constructor(graph, onGraphUpdate) {\n        this._graph = graph;\n        this._onGraphUpdate = onGraphUpdate;\n    }\n    /**\n     * Clear everything (as `rm -rf .git && git init`).\n     */\n    clear() {\n        this._graph.refs = new refs_1.Refs();\n        this._graph.tags = new refs_1.Refs();\n        this._graph.commits = [];\n        this._graph.branches = new Map();\n        this._graph.currentBranch = this._graph.createBranch(\"master\");\n        this._onGraphUpdate();\n        return this;\n    }\n    commit(options) {\n        this._graph.currentBranch.getUserApi().commit(options);\n        return this;\n    }\n    branch(args) {\n        return this._graph.createBranch(args).getUserApi();\n    }\n    tag(...args) {\n        // Deal with shorter syntax\n        let name;\n        let ref;\n        let style;\n        let render;\n        if (typeof args[0] === \"string\") {\n            name = args[0];\n            ref = args[1];\n        }\n        else {\n            name = args[0].name;\n            ref = args[0].ref;\n            style = args[0].style;\n            render = args[0].render;\n        }\n        if (!ref) {\n            const head = this._graph.refs.getCommit(\"HEAD\");\n            if (!head)\n                return this;\n            ref = head;\n        }\n        let commitHash;\n        if (this._graph.refs.hasCommit(ref)) {\n            // `ref` is a `Commit[\"hash\"]`\n            commitHash = ref;\n        }\n        if (this._graph.refs.hasName(ref)) {\n            // `ref` is a `Branch[\"name\"]`\n            commitHash = this._graph.refs.getCommit(ref);\n        }\n        if (!commitHash) {\n            throw new Error(`The ref \"${ref}\" does not exist`);\n        }\n        this._graph.tags.set(name, commitHash);\n        this._graph.tagStyles[name] = style;\n        this._graph.tagRenders[name] = render;\n        this._onGraphUpdate();\n        return this;\n    }\n    /**\n     * Import a JSON.\n     *\n     * Data can't be typed since it comes from a JSON.\n     * We validate input format and throw early if something is invalid.\n     *\n     * @experimental\n     * @param data JSON from `git2json` output\n     */\n    import(data) {\n        const invalidData = new Error(\"Only `git2json` format is supported for imported data.\");\n        // We manually validate input data instead of using a lib like yup.\n        // => this is to keep bundlesize small.\n        if (!Array.isArray(data)) {\n            throw invalidData;\n        }\n        const areDataValid = data.every((options) => {\n            return (typeof options === \"object\" &&\n                typeof options.author === \"object\" &&\n                Array.isArray(options.refs));\n        });\n        if (!areDataValid) {\n            throw invalidData;\n        }\n        const commitOptionsList = data\n            .map((options) => (Object.assign({}, options, { style: Object.assign({}, this._graph.template.commit, { message: Object.assign({}, this._graph.template.commit.message, { display: this._graph.shouldDisplayCommitMessage }) }), author: `${options.author.name} <${options.author.email}>` })))\n            // Git2json outputs is reverse-chronological.\n            // We need to commit it chronological order.\n            .reverse();\n        // Use validated `value`.\n        this.clear();\n        this._graph.commits = commitOptionsList.map((options) => new commit_1.Commit(options));\n        // Create tags & refs.\n        commitOptionsList.forEach(({ refs, hash }) => {\n            if (!refs)\n                return;\n            if (!hash)\n                return;\n            const TAG_PREFIX = \"tag: \";\n            const tags = refs\n                .map((ref) => ref.split(TAG_PREFIX))\n                .map(([_, tag]) => tag)\n                .filter((tag) => typeof tag === \"string\");\n            tags.forEach((tag) => this._graph.tags.set(tag, hash));\n            refs\n                .filter((ref) => !ref.startsWith(TAG_PREFIX))\n                .forEach((ref) => this._graph.refs.set(ref, hash));\n        });\n        // Create branches.\n        const branches = this._getBranches();\n        this._graph.commits\n            .map((commit) => this._withBranches(branches, commit))\n            .reduce((mem, commit) => {\n            if (!commit.branches)\n                return mem;\n            commit.branches.forEach((branch) => mem.add(branch));\n            return mem;\n        }, new Set())\n            .forEach((branch) => this.branch(branch));\n        this._onGraphUpdate();\n        return this;\n    }\n    // tslint:disable:variable-name - Prefix `_` = explicitly private for JS users\n    // TODO: get rid of these duplicated private methods.\n    //\n    // These belong to Gitgraph. It is duplicated because of `import()`.\n    // `import()` should use regular user API instead.\n    _withBranches(branches, commit) {\n        let commitBranches = Array.from((branches.get(commit.hash) || new Set()).values());\n        if (commitBranches.length === 0) {\n            // No branch => branch has been deleted.\n            commitBranches = [branch_1.DELETED_BRANCH_NAME];\n        }\n        return commit.setBranches(commitBranches);\n    }\n    _getBranches() {\n        const result = new Map();\n        const queue = [];\n        const branches = this._graph.refs\n            .getAllNames()\n            .filter((name) => name !== \"HEAD\");\n        branches.forEach((branch) => {\n            const commitHash = this._graph.refs.getCommit(branch);\n            if (commitHash) {\n                queue.push(commitHash);\n            }\n            while (queue.length > 0) {\n                const currentHash = queue.pop();\n                const current = this._graph.commits.find(({ hash }) => hash === currentHash);\n                const prevBranches = result.get(currentHash) || new Set();\n                prevBranches.add(branch);\n                result.set(currentHash, prevBranches);\n                if (current && current.parents && current.parents.length > 0) {\n                    queue.push(current.parents[0]);\n                }\n            }\n        });\n        return result;\n    }\n}\nexports.GitgraphUserApi = GitgraphUserApi;\n//# sourceMappingURL=gitgraph-user-api.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst orientation_1 = require(\"./orientation\");\n/**\n * Provide a default value to a boolean.\n * @param value\n * @param defaultValue\n */\nfunction booleanOptionOr(value, defaultValue) {\n    return typeof value === \"boolean\" ? value : defaultValue;\n}\nexports.booleanOptionOr = booleanOptionOr;\n/**\n * Provide a default value to a number.\n * @param value\n * @param defaultValue\n */\nfunction numberOptionOr(value, defaultValue) {\n    return typeof value === \"number\" ? value : defaultValue;\n}\nexports.numberOptionOr = numberOptionOr;\n/**\n * Creates an object composed of the picked object properties.\n * @param obj The source object\n * @param paths The property paths to pick\n */\nfunction pick(obj, paths) {\n    return Object.assign({}, paths.reduce((mem, key) => (Object.assign({}, mem, { [key]: obj[key] })), {}));\n}\nexports.pick = pick;\n/**\n * Print a light version of commits into the console.\n * @param commits List of commits\n * @param paths The property paths to pick\n */\nfunction debug(commits, paths) {\n    // tslint:disable-next-line:no-console\n    console.log(JSON.stringify(commits.map((commit) => pick(commit, paths)), null, 2));\n}\nexports.debug = debug;\n/**\n * Return true if is undefined.\n *\n * @param obj\n */\nfunction isUndefined(obj) {\n    return obj === undefined;\n}\nexports.isUndefined = isUndefined;\n/**\n * Return a version of the object without any undefined keys.\n *\n * @param obj\n */\nfunction withoutUndefinedKeys(obj = {}) {\n    return Object.keys(obj).reduce((mem, key) => isUndefined(obj[key]) ? mem : Object.assign({}, mem, { [key]: obj[key] }), {});\n}\nexports.withoutUndefinedKeys = withoutUndefinedKeys;\n/**\n * Return a string ready to use in `svg.path.d` to draw an arrow from params.\n *\n * @param graph Graph context\n * @param parent Parent commit of the target commit\n * @param commit Target commit\n */\nfunction arrowSvgPath(graph, parent, commit) {\n    const commitRadius = commit.style.dot.size;\n    const size = graph.template.arrow.size;\n    const h = commitRadius + graph.template.arrow.offset;\n    // Delta between left & right (radian)\n    const delta = Math.PI / 7;\n    // Alpha angle between parent & commit (radian)\n    const alpha = getAlpha(graph, parent, commit);\n    // Top\n    const x1 = h * Math.cos(alpha);\n    const y1 = h * Math.sin(alpha);\n    // Bottom right\n    const x2 = (h + size) * Math.cos(alpha - delta);\n    const y2 = (h + size) * Math.sin(alpha - delta);\n    // Bottom center\n    const x3 = (h + size / 2) * Math.cos(alpha);\n    const y3 = (h + size / 2) * Math.sin(alpha);\n    // Bottom left\n    const x4 = (h + size) * Math.cos(alpha + delta);\n    const y4 = (h + size) * Math.sin(alpha + delta);\n    return `M${x1},${y1} L${x2},${y2} Q${x3},${y3} ${x4},${y4} L${x4},${y4}`;\n}\nexports.arrowSvgPath = arrowSvgPath;\nfunction getAlpha(graph, parent, commit) {\n    const deltaX = parent.x - commit.x;\n    const deltaY = parent.y - commit.y;\n    const commitSpacing = graph.template.commit.spacing;\n    let alphaY;\n    let alphaX;\n    // Angle usually start from previous commit Y position:\n    //\n    // o\n    // ↑ ↖ ︎\n    // o  |  <-- path is straight until last commit Y position\n    // ↑  o\n    // | ↗︎\n    // o\n    //\n    // So we can to default to commit spacing.\n    // For horizontal orientation => same with commit X position.\n    switch (graph.orientation) {\n        case orientation_1.Orientation.Horizontal:\n            alphaY = deltaY;\n            alphaX = -commitSpacing;\n            break;\n        case orientation_1.Orientation.HorizontalReverse:\n            alphaY = deltaY;\n            alphaX = commitSpacing;\n            break;\n        case orientation_1.Orientation.VerticalReverse:\n            alphaY = -commitSpacing;\n            alphaX = deltaX;\n            break;\n        default:\n            alphaY = commitSpacing;\n            alphaX = deltaX;\n            break;\n    }\n    // If commit is distant from its parent, there should be no angle.\n    //\n    //    o ︎\n    //    ↑  <-- arrow is like previous commit was on same X position\n    // o  |\n    // | /\n    // o\n    //\n    // For horizontal orientation => same with commit Y position.\n    if (graph.isVertical) {\n        if (Math.abs(deltaY) > commitSpacing)\n            alphaX = 0;\n    }\n    else {\n        if (Math.abs(deltaX) > commitSpacing)\n            alphaY = 0;\n    }\n    if (graph.reverseArrow) {\n        alphaY *= -1;\n        alphaX *= -1;\n    }\n    return Math.atan2(alphaY, alphaX);\n}\n//# sourceMappingURL=utils.js.map","import * as React from \"react\";\nfunction DefaultBranchLabel(_a) {\n    var branch = _a.branch, commit = _a.commit;\n    var _b = React.useState({\n        textWidth: 0,\n        textHeight: 0,\n    }), textSizing = _b[0], setTextSizing = _b[1];\n    var getSizing = React.useCallback(function (node) {\n        if (!node)\n            return;\n        var box = node.getBBox();\n        setTextSizing({ textWidth: box.width, textHeight: box.height });\n    }, []);\n    var boxWidth = textSizing.textWidth + 2 * BranchLabel.paddingX;\n    var boxHeight = textSizing.textHeight + 2 * BranchLabel.paddingY;\n    return (React.createElement(\"g\", null,\n        React.createElement(\"rect\", { stroke: branch.style.label.strokeColor || commit.style.color, fill: branch.style.label.bgColor, rx: branch.style.label.borderRadius, width: boxWidth, height: boxHeight }),\n        React.createElement(\"text\", { ref: getSizing, fill: branch.style.label.color || commit.style.color, style: { font: branch.style.label.font }, alignmentBaseline: \"middle\", dominantBaseline: \"middle\", x: BranchLabel.paddingX, y: boxHeight / 2 }, branch.name)));\n}\nexport var BranchLabel = React.forwardRef(function (props, ref) {\n    var branch = props.branch, commit = props.commit, branchLabelX = props.branchLabelX;\n    if (!branch.style.label.display)\n        return null;\n    if (!props.gitgraph.branchLabelOnEveryCommit) {\n        var commitHash = props.gitgraph.refs.getCommit(branch.name);\n        if (commit.hash !== commitHash)\n            return null;\n    }\n    // For the moment, we don't handle multiple branch labels.\n    // To do so, we'd need to reposition each of them appropriately.\n    if (commit.branchToDisplay !== branch.name)\n        return null;\n    var branchLabel = branch.renderLabel ? (branch.renderLabel(branch)) : (React.createElement(DefaultBranchLabel, { branch: branch, commit: commit }));\n    if (props.gitgraph.isVertical) {\n        return (React.createElement(\"g\", { ref: ref, transform: \"translate(\" + (branchLabelX || 0) + \", 0)\" }, branchLabel));\n    }\n    else {\n        var commitDotSize = commit.style.dot.size * 2;\n        var horizontalMarginTop = 10;\n        var y = commitDotSize + horizontalMarginTop;\n        return (React.createElement(\"g\", { ref: ref, transform: \"translate(\" + commit.x + \", \" + y + \")\" }, branchLabel));\n    }\n});\nBranchLabel.paddingX = 10;\nBranchLabel.paddingY = 5;\n//# sourceMappingURL=BranchLabel.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as React from \"react\";\nvar Tooltip = /** @class */ (function (_super) {\n    __extends(Tooltip, _super);\n    function Tooltip() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = { textWidth: 0 };\n        _this.$text = React.createRef();\n        return _this;\n    }\n    Tooltip.prototype.componentDidMount = function () {\n        this.setState({ textWidth: this.$text.current.getBBox().width });\n    };\n    Tooltip.prototype.render = function () {\n        if (this.props.commit.renderTooltip) {\n            return this.props.commit.renderTooltip(this.props.commit);\n        }\n        var commitSize = this.props.commit.style.dot.size * 2;\n        var offset = 10;\n        var padding = Tooltip.padding;\n        var radius = 5;\n        var boxHeight = 50;\n        var boxWidth = offset + this.state.textWidth + 2 * padding;\n        var path = [\n            \"M 0,0\",\n            \"L \" + offset + \",\" + offset,\n            \"V \" + (boxHeight / 2 - radius),\n            \"Q \" + offset + \",\" + boxHeight / 2 + \" \" + (offset + radius) + \",\" + boxHeight / 2,\n            \"H \" + (boxWidth - radius),\n            \"Q \" + boxWidth + \",\" + boxHeight / 2 + \" \" + boxWidth + \",\" + (boxHeight / 2 - radius),\n            \"V -\" + (boxHeight / 2 - radius),\n            \"Q \" + boxWidth + \",-\" + boxHeight / 2 + \" \" + (boxWidth - radius) + \",-\" + boxHeight / 2,\n            \"H \" + (offset + radius),\n            \"Q \" + offset + \",-\" + boxHeight / 2 + \" \" + offset + \",-\" + (boxHeight / 2 - radius),\n            \"V -\" + offset,\n            \"z\",\n        ].join(\" \");\n        return (React.createElement(\"g\", { transform: \"translate(\" + commitSize + \", \" + commitSize / 2 + \")\" },\n            React.createElement(\"path\", { d: path, fill: \"#EEE\" }),\n            React.createElement(\"text\", { ref: this.$text, x: offset + padding, y: 0, alignmentBaseline: \"central\", fill: \"#333\" }, this.props.children)));\n    };\n    Tooltip.padding = 10;\n    return Tooltip;\n}(React.Component));\nexport { Tooltip };\n//# sourceMappingURL=Tooltip.js.map","import * as React from \"react\";\nexport var Dot = function (_a) {\n    var commit = _a.commit, onMouseOver = _a.onMouseOver, onMouseOut = _a.onMouseOut;\n    if (commit.renderDot) {\n        return commit.renderDot(commit);\n    }\n    return (\n    /*\n      In order to handle strokes, we need to do some complex stuff here… 😅\n\n      Problem: strokes are drawn inside & outside the circle.\n      But we want the stroke to be drawn inside only!\n\n      The outside overlaps with other elements, as we expect the dot to have a fixed size. So we want to crop the outside part.\n\n      Solution:\n      1. Create the circle in a <defs>\n      2. Define a clip path that references the circle\n      3. Use the clip path, adding the stroke.\n      4. Double stroke width as half of it will be clipped (the outside part).\n\n      Ref.: https://stackoverflow.com/a/32162431/3911841\n\n      P.S. there is a proposal for a stroke-alignment property,\n      but it's still a W3C Draft ¯\\_(ツ)_/¯\n      https://svgwg.org/specs/strokes/#SpecifyingStrokeAlignment\n    */\n    React.createElement(React.Fragment, null,\n        React.createElement(\"defs\", null,\n            React.createElement(\"circle\", { id: commit.hash, cx: commit.style.dot.size, cy: commit.style.dot.size, r: commit.style.dot.size, fill: commit.style.dot.color }),\n            React.createElement(\"clipPath\", { id: \"clip-\" + commit.hash },\n                React.createElement(\"use\", { xlinkHref: \"#\" + commit.hash }))),\n        React.createElement(\"g\", { onClick: commit.onClick, onMouseOver: onMouseOver, onMouseOut: onMouseOut },\n            React.createElement(\"use\", { xlinkHref: \"#\" + commit.hash, clipPath: \"url(#clip-\" + commit.hash + \")\", stroke: commit.style.dot.strokeColor, strokeWidth: commit.style.dot.strokeWidth && commit.style.dot.strokeWidth * 2 }),\n            commit.dotText && (React.createElement(\"text\", { alignmentBaseline: \"central\", textAnchor: \"middle\", x: commit.style.dot.size, y: commit.style.dot.size, style: { font: commit.style.dot.font } }, commit.dotText)))));\n};\n//# sourceMappingURL=Dot.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as React from \"react\";\nimport { arrowSvgPath } from \"@gitgraph/core\";\nvar Arrow = /** @class */ (function (_super) {\n    __extends(Arrow, _super);\n    function Arrow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Arrow.prototype.render = function () {\n        var _this = this;\n        var parent = this.props.commits.find(function (_a) {\n            var hash = _a.hash;\n            return hash === _this.props.parentHash;\n        });\n        if (!parent)\n            return null;\n        // Starting point, relative to commit\n        var origin = this.props.gitgraph.reverseArrow\n            ? {\n                x: this.props.commitRadius + (parent.x - this.props.commit.x),\n                y: this.props.commitRadius + (parent.y - this.props.commit.y),\n            }\n            : { x: this.props.commitRadius, y: this.props.commitRadius };\n        return (React.createElement(\"g\", { transform: \"translate(\" + origin.x + \", \" + origin.y + \")\" },\n            React.createElement(\"path\", { d: arrowSvgPath(this.props.gitgraph, parent, this.props.commit), fill: this.props.gitgraph.template.arrow.color })));\n    };\n    return Arrow;\n}(React.Component));\nexport { Arrow };\n//# sourceMappingURL=Arrow.js.map","import * as React from \"react\";\nexport var Message = React.forwardRef(function (props, ref) {\n    var commit = props.commit, messageX = props.messageX;\n    if (commit.renderMessage) {\n        return (React.createElement(\"g\", { ref: ref, transform: \"translate(\" + messageX + \", 0)\" }, commit.renderMessage(commit)));\n    }\n    var body = null;\n    if (commit.body) {\n        body = (React.createElement(\"foreignObject\", { width: \"600\", x: \"10\" },\n            React.createElement(\"p\", null, commit.body)));\n    }\n    // Use commit dot radius to align text with the middle of the dot.\n    var y = commit.style.dot.size;\n    return (React.createElement(\"g\", { ref: ref, transform: \"translate(\" + messageX + \", \" + y + \")\" },\n        React.createElement(\"text\", { alignmentBaseline: \"central\", fill: commit.style.message.color, style: { font: commit.style.message.font }, onClick: commit.onMessageClick }, commit.message),\n        body));\n});\n//# sourceMappingURL=Message.js.map","import * as React from \"react\";\nexport var TAG_PADDING_X = 10;\nexport var TAG_PADDING_Y = 5;\nfunction DefaultTag(props) {\n    var _a = React.useState({ textWidth: 0, textHeight: 0 }), state = _a[0], setState = _a[1];\n    var $text = React.useRef(null);\n    React.useEffect(function () {\n        var box = $text.current.getBBox();\n        setState({ textWidth: box.width, textHeight: box.height });\n    }, []);\n    var tag = props.tag;\n    var offset = tag.style.pointerWidth;\n    var radius = tag.style.borderRadius;\n    var boxWidth = offset + state.textWidth + 2 * TAG_PADDING_X;\n    var boxHeight = state.textHeight + 2 * TAG_PADDING_Y;\n    var path = [\n        \"M 0,0\",\n        \"L \" + offset + \",\" + boxHeight / 2,\n        \"V \" + boxHeight / 2,\n        \"Q \" + offset + \",\" + boxHeight / 2 + \" \" + (offset + radius) + \",\" + boxHeight / 2,\n        \"H \" + (boxWidth - radius),\n        \"Q \" + boxWidth + \",\" + boxHeight / 2 + \" \" + boxWidth + \",\" + (boxHeight / 2 - radius),\n        \"V \" + -(boxHeight / 2 - radius),\n        \"Q \" + boxWidth + \",-\" + boxHeight / 2 + \" \" + (boxWidth - radius) + \",-\" + boxHeight / 2,\n        \"H \" + (offset + radius),\n        \"Q \" + offset + \",-\" + boxHeight / 2 + \" \" + offset + \",-\" + boxHeight / 2,\n        \"V -\" + boxHeight / 2,\n        \"z\",\n    ].join(\" \");\n    return (React.createElement(\"g\", null,\n        React.createElement(\"path\", { d: path, fill: tag.style.bgColor, stroke: tag.style.strokeColor }),\n        React.createElement(\"text\", { ref: $text, fill: tag.style.color, style: { font: tag.style.font }, alignmentBaseline: \"middle\", dominantBaseline: \"middle\", x: offset + TAG_PADDING_X, y: 0 }, tag.name)));\n}\nexport var Tag = React.forwardRef(function (props, ref) {\n    var tag = props.tag, commit = props.commit, tagX = props.tagX;\n    return (React.createElement(\"g\", { ref: ref, transform: \"translate(\" + (tagX || 0) + \", \" + commit.style.dot.size + \")\" }, tag.render ? tag.render(tag.name, tag.style) : React.createElement(DefaultTag, { tag: tag })));\n});\n//# sourceMappingURL=Tag.js.map","import * as React from \"react\";\nimport { Mode, } from \"@gitgraph/core\";\nimport { Dot } from \"./Dot\";\nimport { Tooltip } from \"./Tooltip\";\nimport { Arrow } from \"./Arrow\";\nimport { Message } from \"./Message\";\nimport { Tag, TAG_PADDING_X } from \"./Tag\";\nimport { BranchLabel } from \"./BranchLabel\";\nexport var Commit = function (props) {\n    var commit = props.commit, commits = props.commits, gitgraph = props.gitgraph, commitMessagesX = props.commitMessagesX;\n    /**\n     * This _should_ likely be an array, but is not in order to intentionally keep\n     *  a potential bug in the codebase that existed prior to Hook-ifying this component\n     * @see https://github.com/nicoespeon/gitgraph.js/blob/be9cdf45c7f00970e68e1a4ba579ca7f5c672da4/packages/gitgraph-react/src/Gitgraph.tsx#L197\n     * (notice that it's a single `null` value instead of an array\n     *\n     * The potential bug in question is \"what happens when there are more than one\n     * branch label rendered? Do they overlap or cause the message X position to be\n     * in the wrong position?\"\n     *\n     * TODO: Investigate potential bug outlined above\n     */\n    var branchLabelRef = React.useRef();\n    var tagRefs = React.useRef([]);\n    // \"as unknown as any\" needed to avoid `ref` mistypings later. :(\n    var messageRef = React.useRef();\n    var _a = React.useState(0), branchLabelX = _a[0], setBranchLabelX = _a[1];\n    var _b = React.useState([]), tagXs = _b[0], setTagXs = _b[1];\n    var _c = React.useState(0), messageX = _c[0], setMessageX = _c[1];\n    var arrows = React.useMemo(function () {\n        if (!gitgraph.template.arrow.size)\n            return null;\n        var commitRadius = commit.style.dot.size;\n        return commit.parents.map(function (parentHash) {\n            return (React.createElement(Arrow, { key: parentHash, commits: commits, commit: commit, gitgraph: gitgraph, parentHash: parentHash, commitRadius: commitRadius }));\n        });\n    }, [commits, commit, gitgraph]);\n    var branchLabels = React.useMemo(function () {\n        // @gitgraph/core could compute branch labels into commits directly.\n        // That will make it easier to retrieve them, just like tags.\n        var branches = Array.from(gitgraph.branches.values());\n        return branches.map(function (branch) {\n            return (React.createElement(BranchLabel, { key: branch.name, gitgraph: gitgraph, branch: branch, commit: commit, ref: branchLabelRef, branchLabelX: branchLabelX }));\n        });\n    }, [gitgraph, commit, branchLabelX]);\n    var tags = React.useMemo(function () {\n        tagRefs.current = [];\n        if (!commit.tags)\n            return null;\n        if (gitgraph.isHorizontal)\n            return null;\n        return commit.tags.map(function (tag, i) { return (React.createElement(Tag, { key: commit.hashAbbrev + \"-\" + tag.name, commit: commit, tag: tag, ref: function (r) { return (tagRefs.current[i] = r); }, tagX: tagXs[i] || 0 })); });\n    }, [commit, gitgraph, tagXs]);\n    var _d = props.getWithCommitOffset(commit), x = _d.x, y = _d.y;\n    // positionCommitsElements\n    React.useLayoutEffect(function () {\n        if (gitgraph.isHorizontal) {\n            // Elements don't appear on horizontal mode, yet.\n            return;\n        }\n        var padding = 10;\n        var translateX = commitMessagesX;\n        if (branchLabelRef.current) {\n            setBranchLabelX(translateX);\n            // For some reason, one paddingX is missing in BBox width.\n            var branchLabelWidth = branchLabelRef.current.getBBox().width + BranchLabel.paddingX;\n            translateX += branchLabelWidth + padding;\n        }\n        var allTagXs = tagRefs.current.map(function (tag) {\n            if (!tag)\n                return 0;\n            var tagX = translateX;\n            // For some reason, one paddingX is missing in BBox width.\n            var tagWidth = tag.getBBox().width + TAG_PADDING_X;\n            translateX += tagWidth + padding;\n            return tagX;\n        });\n        setTagXs(allTagXs);\n        if (messageRef.current) {\n            setMessageX(translateX);\n        }\n    }, [tagRefs, gitgraph, commitMessagesX]);\n    var shouldRenderTooltip = props.currentCommitOver === commit &&\n        (props.gitgraph.isHorizontal ||\n            (props.gitgraph.mode === Mode.Compact &&\n                commit.style.hasTooltipInCompactMode));\n    if (shouldRenderTooltip) {\n        props.setTooltip(React.createElement(\"g\", { transform: \"translate(\" + x + \", \" + y + \")\" },\n            React.createElement(Tooltip, { commit: commit },\n                commit.hashAbbrev,\n                \" - \",\n                commit.subject)));\n    }\n    return (React.createElement(\"g\", { transform: \"translate(\" + x + \", \" + y + \")\" },\n        React.createElement(Dot, { commit: commit, onMouseOver: function () {\n                props.setCurrentCommitOver(commit);\n                commit.onMouseOver();\n            }, onMouseOut: function () {\n                props.setCurrentCommitOver(null);\n                props.setTooltip(null);\n                commit.onMouseOut();\n            } }),\n        arrows,\n        React.createElement(\"g\", { transform: \"translate(\" + -x + \", 0)\" },\n            commit.style.message.display && (React.createElement(Message, { commit: commit, ref: messageRef, messageX: messageX })),\n            branchLabels,\n            tags)));\n};\n//# sourceMappingURL=Commit.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as React from \"react\";\nimport { toSvgPath } from \"@gitgraph/core\";\nvar BranchPath = /** @class */ (function (_super) {\n    __extends(BranchPath, _super);\n    function BranchPath() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    BranchPath.prototype.render = function () {\n        var _this = this;\n        return (React.createElement(\"path\", { d: toSvgPath(this.props.coordinates.map(function (a) {\n                return a.map(function (b) { return _this.props.getWithCommitOffset(b); });\n            }), this.props.isBezier, this.props.gitgraph.isVertical), fill: \"none\", stroke: this.props.branch.computedColor, strokeWidth: this.props.branch.style.lineWidth, transform: \"translate(\" + this.props.offset + \", \" + this.props.offset + \")\" }));\n    };\n    return BranchPath;\n}(React.Component));\nexport { BranchPath };\n//# sourceMappingURL=BranchPath.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as React from \"react\";\nimport { GitgraphCore, MergeStyle, Mode, Orientation, TemplateName, templateExtend, } from \"@gitgraph/core\";\nimport { BranchLabel } from \"./BranchLabel\";\nimport { Tooltip } from \"./Tooltip\";\nimport { Commit } from \"./Commit\";\nimport { BranchPath } from \"./BranchPath\";\nexport { Gitgraph, TemplateName, templateExtend, MergeStyle, Mode, Orientation, };\nfunction isPropsWithGraph(props) {\n    return \"graph\" in props;\n}\nvar Gitgraph = /** @class */ (function (_super) {\n    __extends(Gitgraph, _super);\n    function Gitgraph(props) {\n        var _this = _super.call(this, props) || this;\n        _this.$graph = React.createRef();\n        _this.$commits = React.createRef();\n        _this.$tooltip = null;\n        _this.state = {\n            commits: [],\n            branchesPaths: new Map(),\n            commitMessagesX: 0,\n            commitYWithOffsets: {},\n            shouldRecomputeOffsets: true,\n            currentCommitOver: null,\n        };\n        _this.gitgraph = isPropsWithGraph(props)\n            ? props.graph\n            : new GitgraphCore(props.options);\n        _this.gitgraph.subscribe(function (data) {\n            var commits = data.commits, branchesPaths = data.branchesPaths, commitMessagesX = data.commitMessagesX;\n            _this.setState({\n                commits: commits,\n                branchesPaths: branchesPaths,\n                commitMessagesX: commitMessagesX,\n                shouldRecomputeOffsets: true,\n            });\n        });\n        return _this;\n    }\n    Gitgraph.prototype.render = function () {\n        var _this = this;\n        return (React.createElement(\"svg\", { ref: this.$graph },\n            React.createElement(\"g\", { transform: \"translate(\" + BranchLabel.paddingX + \", \" + Tooltip.padding + \")\" },\n                this.renderBranchesPaths(),\n                React.createElement(\"g\", { ref: this.$commits }, this.state.commits.map(function (commit) { return (React.createElement(Commit, { key: commit.hash, commits: _this.state.commits, commit: commit, currentCommitOver: _this.state.currentCommitOver, setCurrentCommitOver: _this.setCurrentCommitOver.bind(_this), gitgraph: _this.gitgraph, getWithCommitOffset: _this.getWithCommitOffset.bind(_this), setTooltip: _this.setTooltip.bind(_this), commitMessagesX: _this.state.commitMessagesX })); })),\n                this.$tooltip)));\n    };\n    Gitgraph.prototype.componentDidMount = function () {\n        if (isPropsWithGraph(this.props))\n            return;\n        this.props.children(this.gitgraph.getUserApi());\n    };\n    Gitgraph.prototype.componentDidUpdate = function () {\n        if (this.$graph.current) {\n            var _a = this.$graph.current.getBBox(), height = _a.height, width = _a.width;\n            this.$graph.current.setAttribute(\"width\", \n            // Add `Tooltip.padding` so we don't crop the tooltip text.\n            // Add `BranchLabel.paddingX` so we don't cut branch label.\n            (width + Tooltip.padding + BranchLabel.paddingX).toString());\n            this.$graph.current.setAttribute(\"height\", \n            // Add `Tooltip.padding` so we don't crop tooltip text\n            // Add `BranchLabel.paddingY` so we don't crop branch label.\n            (height + Tooltip.padding + BranchLabel.paddingY).toString());\n        }\n        if (!this.state.shouldRecomputeOffsets)\n            return;\n        if (!this.$commits.current)\n            return;\n        var commits = Array.from(this.$commits.current.children);\n        this.setState({\n            commitYWithOffsets: this.computeOffsets(commits),\n            shouldRecomputeOffsets: false,\n        });\n    };\n    Gitgraph.prototype.setCurrentCommitOver = function (v) {\n        this.setState({ currentCommitOver: v });\n    };\n    Gitgraph.prototype.setTooltip = function (v) {\n        this.$tooltip = v;\n    };\n    Gitgraph.prototype.renderBranchesPaths = function () {\n        var _this = this;\n        var offset = this.gitgraph.template.commit.dot.size;\n        var isBezier = this.gitgraph.template.branch.mergeStyle === MergeStyle.Bezier;\n        return Array.from(this.state.branchesPaths).map(function (_a) {\n            var branch = _a[0], coordinates = _a[1];\n            return (React.createElement(BranchPath, { key: branch.name, gitgraph: _this.gitgraph, branch: branch, coordinates: coordinates, getWithCommitOffset: _this.getWithCommitOffset.bind(_this), isBezier: isBezier, offset: offset }));\n        });\n    };\n    Gitgraph.prototype.computeOffsets = function (commits) {\n        var totalOffsetY = 0;\n        // In VerticalReverse orientation, commits are in the same order in the DOM.\n        var orientedCommits = this.gitgraph.orientation === Orientation.VerticalReverse\n            ? commits\n            : commits.reverse();\n        return orientedCommits.reduce(function (newOffsets, commit) {\n            var commitY = parseInt(commit.getAttribute(\"transform\").split(\",\")[1].slice(0, -1), 10);\n            var firstForeignObject = commit.getElementsByTagName(\"foreignObject\")[0];\n            var customHtmlMessage = firstForeignObject && firstForeignObject.firstElementChild;\n            var messageHeight = 0;\n            if (customHtmlMessage) {\n                var height = customHtmlMessage.getBoundingClientRect().height;\n                var marginTopInPx = window.getComputedStyle(customHtmlMessage).marginTop || \"0px\";\n                var marginTop = parseInt(marginTopInPx.replace(\"px\", \"\"), 10);\n                messageHeight = height + marginTop;\n            }\n            // Force the height of the foreignObject (browser issue)\n            if (firstForeignObject) {\n                firstForeignObject.setAttribute(\"height\", messageHeight + \"px\");\n            }\n            newOffsets[commitY] = commitY + totalOffsetY;\n            // Increment total offset after setting the offset\n            // => offset next commits accordingly.\n            totalOffsetY += messageHeight;\n            return newOffsets;\n        }, {});\n    };\n    Gitgraph.prototype.getWithCommitOffset = function (_a) {\n        var x = _a.x, y = _a.y;\n        return { x: x, y: this.state.commitYWithOffsets[y] || y };\n    };\n    Gitgraph.defaultProps = {\n        options: {},\n    };\n    return Gitgraph;\n}(React.Component));\n//# sourceMappingURL=Gitgraph.js.map","import * as React from \"react\";\nimport { Branch, Commit, GitgraphCore } from \"@gitgraph/core\";\nimport { ReactSvgElement } from \"./types\";\nimport { MutableRefObject } from \"react\";\n\ninterface BranchLabelBaseProps {\n  branch: Branch<React.ReactElement<SVGElement>>;\n  commit: Commit<React.ReactElement<SVGElement>>;\n}\n\nfunction DefaultBranchLabel({ branch, commit }: BranchLabelBaseProps) {\n  const [textSizing, setTextSizing] = React.useState({\n    textWidth: 0,\n    textHeight: 0,\n  });\n\n  const getSizing = React.useCallback((node) => {\n    if (!node) return;\n    const box = node.getBBox();\n    setTextSizing({ textWidth: box.width, textHeight: box.height });\n  }, []);\n\n  const boxWidth = textSizing.textWidth + 2 * BranchLabel.paddingX;\n  const boxHeight = textSizing.textHeight + 2 * BranchLabel.paddingY;\n\n  return (\n    <g>\n      <rect\n        stroke={branch.style.label.strokeColor || commit.style.color}\n        fill={branch.style.label.bgColor}\n        rx={branch.style.label.borderRadius}\n        width={boxWidth}\n        height={boxHeight}\n      />\n      <text\n        ref={getSizing}\n        fill={branch.style.label.color || commit.style.color}\n        style={{ font: branch.style.label.font }}\n        alignmentBaseline=\"middle\"\n        dominantBaseline=\"middle\"\n        x={BranchLabel.paddingX}\n        y={boxHeight / 2}\n      >\n        {branch.name}\n      </text>\n    </g>\n  );\n}\n\ninterface BranchLabelProps extends BranchLabelBaseProps {\n  gitgraph: GitgraphCore<ReactSvgElement>;\n  ref: MutableRefObject<SVGGElement | undefined>;\n  branchLabelX: number;\n}\n\nexport interface CompoundedComponent\n  extends React.ForwardRefExoticComponent<BranchLabelProps> {\n  paddingX: number;\n  paddingY: number;\n}\n\nexport const BranchLabel = React.forwardRef<SVGGElement, BranchLabelProps>(\n  (props, ref) => {\n    const { branch, commit, branchLabelX } = props;\n    if (!branch.style.label.display) return null;\n\n    if (!props.gitgraph.branchLabelOnEveryCommit) {\n      const commitHash = props.gitgraph.refs.getCommit(branch.name);\n      if (commit.hash !== commitHash) return null;\n    }\n\n    // For the moment, we don't handle multiple branch labels.\n    // To do so, we'd need to reposition each of them appropriately.\n    if (commit.branchToDisplay !== branch.name) return null;\n\n    const branchLabel = branch.renderLabel ? (\n      branch.renderLabel(branch)\n    ) : (\n      <DefaultBranchLabel branch={branch} commit={commit} />\n    );\n\n    if (props.gitgraph.isVertical) {\n      return (\n        <g ref={ref} transform={`translate(${branchLabelX || 0}, 0)`}>\n          {branchLabel}\n        </g>\n      );\n    } else {\n      const commitDotSize = commit.style.dot.size * 2;\n      const horizontalMarginTop = 10;\n      const y = commitDotSize + horizontalMarginTop;\n\n      return (\n        <g ref={ref} transform={`translate(${commit.x}, ${y})`}>\n          {branchLabel}\n        </g>\n      );\n    }\n  },\n) as CompoundedComponent;\n\nBranchLabel.paddingX = 10;\nBranchLabel.paddingY = 5;\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui';\nimport Items from './items.json';\nimport { Gitgraph, Mode, templateExtend, CommitOptions } from '@gitgraph/react';\nimport { Commit } from '@gitgraph/core/lib/commit';\nimport { createElement, useState, useCallback } from 'react';\nimport { BranchLabel } from '@gitgraph/react/src/BranchLabel';\n\nconst paddingX = BranchLabel.paddingX;\nconst paddingY = BranchLabel.paddingY;\n\nconst options = {\n  template: templateExtend('metro', {\n    colors: ['gray', 'skyblue', 'turquoise', '#0055A4', '#EF4135', 'black'],\n    commit: {\n      message: {\n        displayAuthor: false,\n        displayHash: false,\n      },\n    },\n  }),\n};\n\nconst renderMessage = (commit: Commit) => {\n  const messageX = 0;\n  var body = null;\n  var content = null;\n  var _b = useState({\n      textWidth: 0,\n      textHeight: 0,\n    }),\n    textSizing = _b[0],\n    setTextSizing = _b[1];\n  var getSizing = useCallback(function (node) {\n    if (!node) return;\n    var box = node.getBBox();\n    setTextSizing({ textWidth: box.width, textHeight: box.height });\n  }, []);\n  var boxWidth = textSizing.textWidth + 2 * paddingX;\n  var boxHeight = textSizing.textHeight + 2 * paddingY;\n  var rect = createElement('rect', {\n    stroke: commit.style.color,\n    fill: 'white',\n    rx: paddingX,\n    width: boxWidth,\n    height: boxHeight,\n  });\n  if (commit.body) {\n    // body = (createElement(\"foreignObject\", { width: \"600\", x: \"paddingX\" },\n    //     createElement(\"p\", null, commit.body)));\n    content = createElement(\n      'a',\n      { href: commit.body, target: '_blank' },\n      createElement(\n        'text',\n        {\n          ref: getSizing,\n          fill: 'black',\n          style: { font: commit.style.message.font },\n          alignmentBaseline: 'middle',\n          dominantBaseline: 'middle',\n          x: paddingX,\n          y: boxHeight / 2,\n        },\n        commit.message\n      )\n    );\n  } else {\n    content = createElement(\n      'text',\n      {\n        ref: getSizing,\n        fill: 'black',\n        style: { font: commit.style.message.font },\n        alignmentBaseline: 'middle',\n        dominantBaseline: 'middle',\n        x: paddingX,\n        y: boxHeight / 2,\n      },\n      commit.message\n    );\n  }\n\n  // Use commit dot radius to align text with the middle of the dot.\n  // var y = commit.style.dot.size;\n  var y = 0;\n  return createElement(\n    'g',\n    { transform: 'translate(' + messageX + ', ' + y + ')' },\n    rect,\n    content,\n    body\n  );\n};\n\nexport default function Branch() {\n  return (\n    <div sx={{ width: `100%`, height: `auto` }} id=\"branchBox\">\n      <div\n        id=\"timeline\"\n        sx={{\n          width: `100%`,\n          overflowX: `scroll`,\n          height: `100%`,\n        }}\n      >\n        <Gitgraph options={options}>\n          {(gitgraph) => {\n            const spc = gitgraph.branch('spc');\n            var branch = {\n              spc: spc,\n            };\n            Items.sort((a, b) => {\n              return ('' + a['date']).localeCompare(b['date']);\n            }).map((entry) => {\n              const type = entry['type'];\n              if (!branch[type]) {\n                branch[type] = spc.branch(type);\n              }\n              branch[type].commit({\n                subject: entry['title'],\n                tag: entry['date'],\n                body: entry['link'],\n                renderMessage: renderMessage,\n              });\n            });\n          }}\n        </Gitgraph>\n      </div>\n    </div>\n  );\n}\n","import { jsx as jsx$1 } from '@theme-ui/core';\nexport { __ThemeUIContext, createElement, merge, useThemeUI } from '@theme-ui/core';\nexport { InitializeColorMode, useColorMode } from '@theme-ui/color-modes';\nexport { ThemeProvider } from '@theme-ui/theme-provider';\nexport * from '@theme-ui/components';\nexport { css, get } from '@theme-ui/css';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nvar BaseStyles = function BaseStyles(props) {\n  return jsx('div', _extends({}, props, {\n    sx: _extends({\n      fontFamily: 'body',\n      lineHeight: 'body',\n      fontWeight: 'body',\n      variant: 'styles'\n    }, props.sx)\n  }));\n};\nvar jsx = jsx$1;\n\nexport { BaseStyles, jsx };\n"],"names":["Object","defineProperty","exports","value","branch_user_api_1","DELETED_BRANCH_NAME","Branch","constructor","options","this","gitgraph","name","style","parentCommitHash","commitDefaultOptions","onGraphUpdate","renderLabel","getUserApi","BranchUserApi","isDeleted","createDeletedBranch","BranchesOrder","commits","colors","compareFunction","branches","Set","forEach","commit","add","branchToDisplay","Array","from","sort","get","branchName","findIndex","branch","getColorOf","length","utils_1","BranchesPathsCalculator","commitSpacing","isGraphVertical","isGraphReverse","branchesPaths","Map","execute","fromCommits","withMergeCommits","smoothBranchesPaths","getDeletedBranchInPath","path","existingBranchPath","firstParentCommit","find","hash","parents","push","x","y","set","filter","mergeCommit","parentOnOriginBranch","originBranchName","lastPoints","keys","points","a","b","reverse","paths","reduce","mem","point","i","pick","j","previousPoint","subPath","firstPoint","lastPoint","column","branchSize","Math","round","abs","branchPoints","fill","map","_","lastSubPaths","toSvgPath","coordinates","isBezier","isVertical","previous","middleY","middleX","join","slice","tag_1","Commit","email","refs","author","match","e","timestamp","Date","now","committer","subject","body","random","toString","substring","hashAbbrev","parentsAbbrev","assign","message","dot","dotText","onClick","undefined","onMessageClick","onMouseOver","onMouseOut","renderDot","renderMessage","renderTooltip","displayHash","displayAuthor","setRefs","getNames","setTags","tags","getTagStyle","getTagRender","Tag","setBranches","setPosition","withDefaultColor","color","newStyle","cloneCommit","branch_1","graph_rows_1","mode_1","branches_order_1","template_1","refs_1","branches_paths_1","orientation_1","gitgraph_user_api_1","GitgraphCore","Refs","tagStyles","tagRenders","listeners","nextTimeoutId","template","getTemplate","currentBranch","createBranch","orientation","reverseArrow","booleanOptionOr","initCommitOffsetX","numberOptionOr","initCommitOffsetY","mode","commitMessage","generateCommitHash","branchesOrderFunction","compareBranchesOrder","branchLabelOnEveryCommit","isHorizontal","Orientation","Horizontal","HorizontalReverse","isReverse","VerticalReverse","shouldDisplayCommitMessage","Mode","Compact","GitgraphUserApi","next","subscribe","listener","isSubscribed","index","indexOf","splice","getRenderedData","computeRenderedCommits","computeRenderedBranchesPaths","commitMessagesX","computeCommitMessagesX","computeBranchesColor","args","defaultParentBranchName","getCommit","parentBranchName","hasCommit","label","getBranches","reachableUnassociatedCommits","unassociatedCommits","has","tipsOfMergedBranches","parentHash","reachableCommits","tip","currentCommit","commitsToRender","commitsWithBranches","withBranches","rows","createGraphRows","branchesOrder","withPosition","getBranchDefaultColor","tag","spacing","computedColor","commitBranches","values","result","queue","getAllNames","commitHash","currentHash","pop","current","prevBranches","row","getRowOf","maxRow","getMaxRow","order","window","clearTimeout","setTimeout","regular_1","CompactGraphRows","RegularGraphRows","computeRowsFromCommits","newRow","parentRow","historyParent","max","compact_1","GraphRows","maxRowCache","array","uniq","gitgraph_1","MergeStyle","TemplateName","templateExtend","arrowSvgPath","commitPerName","namesPerCommit","prevCommitHash","removeNameFrom","addNameTo","addCommitTo","delete","hasName","nameToRemove","names","nameToAdd","prevNames","commitHashToAdd","render","commitStyle","tagStyle","strokeColor","bgColor","font","DEFAULT_FONT","borderRadius","pointerWidth","Template","arrow","lineWidth","mergeStyle","Bezier","display","size","offset","hasTooltipInCompactMode","strokeWidth","blackArrowTemplate","Straight","metroTemplate","BlackArrow","Metro","selectedTemplate","__rest","s","t","p","prototype","hasOwnProperty","call","getOwnPropertySymbols","propertyIsEnumerable","commit_1","graph","_branch","_graph","_onGraphUpdate","_isReferenced","Error","_commitWithParents","lookupCommit","merge","isBranchMergeOptions","fastForward","commitOptions","branchLastCommitHash","canFastForward","lastCommitHash","_areCommitsConnected","_fastForwardTo","ref","checkout","target","headCommit","parentOnSameBranch","unshift","_getCommitStyle","childCommitHash","childCommit","includes","some","directParentHash","withoutUndefinedKeys","allNames","clear","head","import","data","invalidData","isArray","every","commitOptionsList","TAG_PREFIX","split","startsWith","_getBranches","_withBranches","obj","key","isUndefined","defaultValue","debug","console","log","JSON","stringify","parent","commitRadius","h","delta","PI","alpha","deltaX","deltaY","alphaY","alphaX","atan2","getAlpha","x1","cos","y1","sin","x2","y2","x3","y3","x4","y4","DefaultBranchLabel","_a","_b","textWidth","textHeight","textSizing","setTextSizing","getSizing","node","box","getBBox","width","height","boxWidth","BranchLabel","paddingX","boxHeight","paddingY","stroke","rx","alignmentBaseline","dominantBaseline","props","branchLabelX","branchLabel","transform","extendStatics","__extends","d","setPrototypeOf","__proto__","__","create","Tooltip","_super","_this","apply","arguments","state","$text","componentDidMount","setState","commitSize","padding","children","Dot","id","cx","cy","r","xlinkHref","clipPath","textAnchor","Arrow","origin","Message","messageX","DefaultTag","radius","tagX","branchLabelRef","tagRefs","messageRef","setBranchLabelX","tagXs","setTagXs","_c","setMessageX","arrows","branchLabels","_d","getWithCommitOffset","translateX","branchLabelWidth","allTagXs","tagWidth","currentCommitOver","setTooltip","setCurrentCommitOver","BranchPath","isPropsWithGraph","Gitgraph","$graph","$commits","$tooltip","commitYWithOffsets","shouldRecomputeOffsets","renderBranchesPaths","bind","componentDidUpdate","setAttribute","computeOffsets","v","totalOffsetY","newOffsets","commitY","parseInt","getAttribute","firstForeignObject","getElementsByTagName","customHtmlMessage","firstElementChild","messageHeight","getBoundingClientRect","marginTopInPx","getComputedStyle","marginTop","replace","defaultProps","React","content","useState","useCallback","rect","createElement","href","jsx","sx","overflowX","spc","Items","localeCompare","entry","type"],"sourceRoot":""}