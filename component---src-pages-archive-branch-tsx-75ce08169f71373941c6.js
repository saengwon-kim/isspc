"use strict";(self.webpackChunkisspc_front=self.webpackChunkisspc_front||[]).push([[513],{254:function(t,e,r){Object.defineProperty(e,"__esModule",{value:!0});const s=r(5834);e.DELETED_BRANCH_NAME="";class i{constructor(t){this.gitgraph=t.gitgraph,this.name=t.name,this.style=t.style,this.parentCommitHash=t.parentCommitHash,this.commitDefaultOptions=t.commitDefaultOptions||{style:{}},this.onGraphUpdate=t.onGraphUpdate,this.renderLabel=t.renderLabel}getUserApi(){return new s.BranchUserApi(this,this.gitgraph,this.onGraphUpdate)}isDeleted(){return""===this.name}}e.Branch=i,e.createDeletedBranch=function(t,e,r){return new i({name:"",gitgraph:t,style:e,onGraphUpdate:r})}},9573:function(t,e){Object.defineProperty(e,"__esModule",{value:!0});e.BranchesOrder=class{constructor(t,e,r){this.branches=new Set,this.colors=e,t.forEach((t=>this.branches.add(t.branchToDisplay))),r&&(this.branches=new Set(Array.from(this.branches).sort(r)))}get(t){return Array.from(this.branches).findIndex((e=>e===t))}getColorOf(t){return this.colors[this.get(t)%this.colors.length]}}},5504:function(t,e,r){Object.defineProperty(e,"__esModule",{value:!0});const s=r(7359);e.BranchesPathsCalculator=class{constructor(t,e,r,s,i,n){this.branchesPaths=new Map,this.commits=t,this.branches=e,this.commitSpacing=r,this.isGraphVertical=s,this.isGraphReverse=i,this.createDeletedBranch=n}execute(){return this.fromCommits(),this.withMergeCommits(),this.smoothBranchesPaths()}fromCommits(){this.commits.forEach((t=>{let e=this.branches.get(t.branchToDisplay);e||(e=this.getDeletedBranchInPath()||this.createDeletedBranch());const r=[],s=this.branchesPaths.get(e),i=this.commits.find((({hash:e})=>e===t.parents[0]));s?r.push(...s):i&&r.push({x:i.x,y:i.y}),r.push({x:t.x,y:t.y}),this.branchesPaths.set(e,r)}))}withMergeCommits(){this.commits.filter((({parents:t})=>t.length>1)).forEach((t=>{const e=this.commits.find((({hash:e})=>e===t.parents[1]));if(!e)return;const r=e.branches?e.branches[0]:"";let s=this.branches.get(r);if(!s&&(s=this.getDeletedBranchInPath(),!s))return;const i=[...this.branchesPaths.get(s)||[]];this.branchesPaths.set(s,[...i,{x:t.x,y:t.y,mergeCommit:!0}])}))}getDeletedBranchInPath(){return Array.from(this.branchesPaths.keys()).find((t=>t.isDeleted()))}smoothBranchesPaths(){const t=new Map;return this.branchesPaths.forEach(((e,r)=>{if(e.length<=1)return void t.set(r,[e]);e=this.isGraphVertical?e.sort(((t,e)=>t.y>e.y?-1:1)):e.sort(((t,e)=>t.x>e.x?1:-1)),this.isGraphReverse&&(e=e.reverse());const i=e.reduce(((t,r,i)=>{if(r.mergeCommit){t[t.length-1].push(s.pick(r,["x","y"]));let n=i-1,o=e[n];for(;n>=0&&o.mergeCommit;)n--,o=e[n];n>=0&&t.push([o])}else t[t.length-1].push(r);return t}),[[]]);this.isGraphReverse&&i.forEach((t=>t.reverse())),this.isGraphVertical?i.forEach((e=>{if(e.length<=1)return;const s=e[0],i=e[e.length-1],n=e[1].x,o=Math.round(Math.abs(s.y-i.y)/this.commitSpacing)-1,a=o>0?new Array(o).fill(0).map(((t,r)=>({x:n,y:e[0].y-this.commitSpacing*(r+1)}))):[],h=t.get(r)||[];t.set(r,[...h,[s,...a,i]])})):i.forEach((e=>{if(e.length<=1)return;const s=e[0],i=e[e.length-1],n=e[1].y,o=Math.round(Math.abs(s.x-i.x)/this.commitSpacing)-1,a=o>0?new Array(o).fill(0).map(((t,r)=>({y:n,x:e[0].x+this.commitSpacing*(r+1)}))):[],h=t.get(r)||[];t.set(r,[...h,[s,...a,i]])}))})),t}},e.toSvgPath=function(t,e,r){return t.map((t=>"M"+t.map((({x:t,y:s},i,n)=>{if(e&&n.length>1&&(1===i||i===n.length-1)){const e=n[i-1];if(r){const r=(e.y+s)/2;return`C ${e.x} ${r} ${t} ${r} ${t} ${s}`}{const r=(e.x+t)/2;return`C ${r} ${e.y} ${r} ${s} ${t} ${s}`}}return`L ${t} ${s}`})).join(" ").slice(1))).join(" ")}},9536:function(t,e,r){Object.defineProperty(e,"__esModule",{value:!0});const s=r(7175);class i{constructor(t){let e,r;this.refs=[],this.x=0,this.y=0;try{[,e,r]=t.author.match(/(.*) <(.*)>/)}catch(s){[e,r]=[t.author,""]}this.author={name:e,email:r,timestamp:Date.now()},this.committer={name:e,email:r,timestamp:Date.now()},this.subject=t.subject,this.body=t.body||"",this.hash=t.hash||(Math.random().toString(16).substring(3)+Math.random().toString(16).substring(3)+Math.random().toString(16).substring(3)+Math.random().toString(16).substring(3)).substring(0,40),this.hashAbbrev=this.hash.substring(0,7),this.parents=t.parents?t.parents:[],this.parentsAbbrev=this.parents.map((t=>t.substring(0,7))),this.style=Object.assign({},t.style,{message:Object.assign({},t.style.message),dot:Object.assign({},t.style.dot)}),this.dotText=t.dotText,this.onClick=()=>t.onClick?t.onClick(this):void 0,this.onMessageClick=()=>t.onMessageClick?t.onMessageClick(this):void 0,this.onMouseOver=()=>t.onMouseOver?t.onMouseOver(this):void 0,this.onMouseOut=()=>t.onMouseOut?t.onMouseOut(this):void 0,this.renderDot=t.renderDot,this.renderMessage=t.renderMessage,this.renderTooltip=t.renderTooltip}get message(){let t="";return this.style.message.displayHash&&(t+=`${this.hashAbbrev} `),t+=this.subject,this.style.message.displayAuthor&&(t+=` - ${this.author.name} <${this.author.email}>`),t}get branchToDisplay(){return this.branches?this.branches[0]:""}setRefs(t){return this.refs=t.getNames(this.hash),this}setTags(t,e,r){return this.tags=t.getNames(this.hash).map((t=>new s.Tag(t,e(t),r(t),this.style))),this}setBranches(t){return this.branches=t,this}setPosition({x:t,y:e}){return this.x=t,this.y=e,this}withDefaultColor(t){const e=Object.assign({},this.style,{dot:Object.assign({},this.style.dot),message:Object.assign({},this.style.message)});e.color||(e.color=t),e.dot.color||(e.dot.color=t),e.message.color||(e.message.color=t);const r=this.cloneCommit();return r.style=e,r}cloneCommit(){const t=new i({author:`${this.author.name} <${this.author.email}>`,subject:this.subject,style:this.style,body:this.body,hash:this.hash,parents:this.parents,dotText:this.dotText,onClick:this.onClick,onMessageClick:this.onMessageClick,onMouseOver:this.onMouseOver,onMouseOut:this.onMouseOut,renderDot:this.renderDot,renderMessage:this.renderMessage,renderTooltip:this.renderTooltip});return t.refs=this.refs,t.branches=this.branches,t.tags=this.tags,t.x=this.x,t.y=this.y,t}}e.Commit=i},7729:function(t,e,r){Object.defineProperty(e,"__esModule",{value:!0});const s=r(254),i=r(4569),n=r(7066),o=r(9573),a=r(759),h=r(3755),c=r(5504),m=r(7359),l=r(2721),p=r(3455);e.GitgraphCore=class{constructor(t={}){this.refs=new h.Refs,this.tags=new h.Refs,this.tagStyles={},this.tagRenders={},this.commits=[],this.branches=new Map,this.listeners=[],this.nextTimeoutId=null,this.template=a.getTemplate(t.template),this.currentBranch=this.createBranch("master"),this.orientation=t.orientation,this.reverseArrow=m.booleanOptionOr(t.reverseArrow,!1),this.initCommitOffsetX=m.numberOptionOr(t.initCommitOffsetX,0),this.initCommitOffsetY=m.numberOptionOr(t.initCommitOffsetY,0),this.mode=t.mode,this.author=t.author||"Sergio Flores <saxo-guy@epic.com>",this.commitMessage=t.commitMessage||"He doesn't like George Michael! Boooo!",this.generateCommitHash="function"==typeof t.generateCommitHash?t.generateCommitHash:()=>{},this.branchesOrderFunction="function"==typeof t.compareBranchesOrder?t.compareBranchesOrder:void 0,this.branchLabelOnEveryCommit=m.booleanOptionOr(t.branchLabelOnEveryCommit,!1)}get isHorizontal(){return this.orientation===l.Orientation.Horizontal||this.orientation===l.Orientation.HorizontalReverse}get isVertical(){return!this.isHorizontal}get isReverse(){return this.orientation===l.Orientation.HorizontalReverse||this.orientation===l.Orientation.VerticalReverse}get shouldDisplayCommitMessage(){return!this.isHorizontal&&this.mode!==n.Mode.Compact}getUserApi(){return new p.GitgraphUserApi(this,(()=>this.next()))}subscribe(t){this.listeners.push(t);let e=!0;return()=>{if(!e)return;e=!1;const r=this.listeners.indexOf(t);this.listeners.splice(r,1)}}getRenderedData(){const t=this.computeRenderedCommits(),e=this.computeRenderedBranchesPaths(t),r=this.computeCommitMessagesX(e);return this.computeBranchesColor(t,e),{commits:t,branchesPaths:e,commitMessagesX:r}}createBranch(t){const e="HEAD";let r={gitgraph:this,name:"",parentCommitHash:this.refs.getCommit(e),style:this.template.branch,onGraphUpdate:()=>this.next()};if("string"==typeof t)r.name=t,r.parentCommitHash=this.refs.getCommit(e);else{const s=t.from?t.from.name:e,i=this.refs.getCommit(s)||(this.refs.hasCommit(t.from)?t.from:void 0);t.style=t.style||{},r=Object.assign({},r,t,{parentCommitHash:i,style:Object.assign({},r.style,t.style,{label:Object.assign({},r.style.label,t.style.label)})})}const i=new s.Branch(r);return this.branches.set(i.name,i),i}computeRenderedCommits(){const t=this.getBranches(),e=(()=>{const e=new Set(this.commits.reduce(((e,{hash:r})=>t.has(r)?e:[...e,r]),[])),r=this.commits.reduce(((t,e)=>e.parents.length>1?[...t,...e.parents.slice(1).map((t=>this.commits.find((({hash:e})=>t===e))))]:t),[]),s=new Set;return r.forEach((t=>{let r=t;for(;r&&e.has(r.hash);)s.add(r.hash),r=r.parents.length>0?this.commits.find((({hash:t})=>r.parents[0]===t)):void 0})),s})(),r=this.commits.filter((({hash:r})=>t.has(r)||e.has(r))),s=r.map((e=>this.withBranches(t,e))),n=i.createGraphRows(this.mode,r),a=new o.BranchesOrder(s,this.template.colors,this.branchesOrderFunction);return s.map((t=>t.setRefs(this.refs))).map((t=>this.withPosition(n,a,t))).map((t=>t.withDefaultColor(this.getBranchDefaultColor(a,t.branchToDisplay)))).map((t=>t.setTags(this.tags,(t=>Object.assign({},this.tagStyles[t],this.template.tag)),(t=>this.tagRenders[t]))))}computeRenderedBranchesPaths(t){return new c.BranchesPathsCalculator(t,this.branches,this.template.commit.spacing,this.isVertical,this.isReverse,(()=>s.createDeletedBranch(this,this.template.branch,(()=>this.next())))).execute()}computeBranchesColor(t,e){const r=new o.BranchesOrder(t,this.template.colors,this.branchesOrderFunction);Array.from(e).forEach((([t])=>{t.computedColor=t.style.color||this.getBranchDefaultColor(r,t.name)}))}computeCommitMessagesX(t){return Array.from(t).length*this.template.branch.spacing}withBranches(t,e){let r=Array.from((t.get(e.hash)||new Set).values());return 0===r.length&&(r=[s.DELETED_BRANCH_NAME]),e.setBranches(r)}getBranches(){const t=new Map,e=[];return this.refs.getAllNames().filter((t=>"HEAD"!==t)).forEach((r=>{const s=this.refs.getCommit(r);for(s&&e.push(s);e.length>0;){const s=e.pop(),i=this.commits.find((({hash:t})=>t===s)),n=t.get(s)||new Set;n.add(r),t.set(s,n),i&&i.parents&&i.parents.length>0&&e.push(i.parents[0])}})),t}withPosition(t,e,r){const s=t.getRowOf(r.hash),i=t.getMaxRow(),n=e.get(r.branchToDisplay);switch(this.orientation){default:return r.setPosition({x:this.initCommitOffsetX+this.template.branch.spacing*n,y:this.initCommitOffsetY+this.template.commit.spacing*(i-s)});case l.Orientation.VerticalReverse:return r.setPosition({x:this.initCommitOffsetX+this.template.branch.spacing*n,y:this.initCommitOffsetY+this.template.commit.spacing*s});case l.Orientation.Horizontal:return r.setPosition({x:this.initCommitOffsetX+this.template.commit.spacing*s,y:this.initCommitOffsetY+this.template.branch.spacing*n});case l.Orientation.HorizontalReverse:return r.setPosition({x:this.initCommitOffsetX+this.template.commit.spacing*(i-s),y:this.initCommitOffsetY+this.template.branch.spacing*n})}}getBranchDefaultColor(t,e){return t.getColorOf(e)}next(){this.nextTimeoutId&&window.clearTimeout(this.nextTimeoutId),this.nextTimeoutId=window.setTimeout((()=>{this.listeners.forEach((t=>t(this.getRenderedData())))}),0)}}},4781:function(t,e,r){Object.defineProperty(e,"__esModule",{value:!0});const s=r(5037);class i extends s.RegularGraphRows{computeRowsFromCommits(t){t.forEach(((e,r)=>{let s=r;if(!(0===r)){const i=this.getRowOf(e.parents[0]),n=t[r-1];s=Math.max(i+1,this.getRowOf(n.hash));if(e.parents.length>1){i<this.getRowOf(e.parents[1])&&s++}}this.rows.set(e.hash,s)}))}}e.CompactGraphRows=i},4569:function(t,e,r){Object.defineProperty(e,"__esModule",{value:!0});const s=r(7066),i=r(4781),n=r(5037);e.GraphRows=n.RegularGraphRows,e.createGraphRows=function(t,e){return t===s.Mode.Compact?new i.CompactGraphRows(e):new n.RegularGraphRows(e)}},5037:function(t,e){Object.defineProperty(e,"__esModule",{value:!0});e.RegularGraphRows=class{constructor(t){this.rows=new Map,this.maxRowCache=void 0,this.computeRowsFromCommits(t)}getRowOf(t){return this.rows.get(t)||0}getMaxRow(){return void 0===this.maxRowCache&&(this.maxRowCache=function(t){const e=new Set;return t.forEach((t=>e.add(t))),Array.from(e)}(Array.from(this.rows.values())).length-1),this.maxRowCache}computeRowsFromCommits(t){t.forEach(((t,e)=>{this.rows.set(t.hash,e)})),this.maxRowCache=void 0}}},6734:function(t,e,r){var s=r(7729);e.vN=s.GitgraphCore;var i=r(7066);e.AR=i.Mode,r(3455).GitgraphUserApi,r(5834).BranchUserApi,r(254).Branch,r(9536).Commit,r(7175).Tag,r(3755).Refs;var n=r(759);e.CV=n.MergeStyle,n.TemplateName,e.Zx=n.templateExtend;var o=r(2721);e.i5=o.Orientation;var a=r(5504);e.Sx=a.toSvgPath;var h=r(7359);e.vz=h.arrowSvgPath},7066:function(t,e){var r;Object.defineProperty(e,"__esModule",{value:!0}),function(t){t.Compact="compact"}(r||(r={})),e.Mode=r},2721:function(t,e){Object.defineProperty(e,"__esModule",{value:!0}),function(t){t.VerticalReverse="vertical-reverse",t.Horizontal="horizontal",t.HorizontalReverse="horizontal-reverse"}(e.Orientation||(e.Orientation={}))},3755:function(t,e){Object.defineProperty(e,"__esModule",{value:!0});e.Refs=class{constructor(){this.commitPerName=new Map,this.namesPerCommit=new Map}set(t,e){const r=this.commitPerName.get(t);return r&&this.removeNameFrom(r,t),this.addNameTo(e,t),this.addCommitTo(t,e),this}delete(t){return this.hasName(t)&&(this.removeNameFrom(this.getCommit(t),t),this.commitPerName.delete(t)),this}getCommit(t){return this.commitPerName.get(t)}getNames(t){return this.namesPerCommit.get(t)||[]}getAllNames(){return Array.from(this.commitPerName.keys())}hasCommit(t){return this.namesPerCommit.has(t)}hasName(t){return this.commitPerName.has(t)}removeNameFrom(t,e){const r=this.namesPerCommit.get(t)||[];this.namesPerCommit.set(t,r.filter((t=>t!==e)))}addNameTo(t,e){const r=this.namesPerCommit.get(t)||[];this.namesPerCommit.set(t,[...r,e])}addCommitTo(t,e){this.commitPerName.set(t,e)}}},7175:function(t,e,r){Object.defineProperty(e,"__esModule",{value:!0});const s=r(759),i=r(7359);e.Tag=class{constructor(t,e,r,s){this.name=t,this.tagStyle=e,this.commitStyle=s,this.render=r}get style(){return{strokeColor:this.tagStyle.strokeColor||this.commitStyle.color,bgColor:this.tagStyle.bgColor||this.commitStyle.color,color:this.tagStyle.color||"white",font:this.tagStyle.font||this.commitStyle.message.font||s.DEFAULT_FONT,borderRadius:i.numberOptionOr(this.tagStyle.borderRadius,10),pointerWidth:i.numberOptionOr(this.tagStyle.pointerWidth,12)}}}},759:function(t,e,r){Object.defineProperty(e,"__esModule",{value:!0});const s=r(7359);var i;!function(t){t.Bezier="bezier",t.Straight="straight"}(i||(i={})),e.MergeStyle=i,e.DEFAULT_FONT="normal 12pt Calibri";class n{constructor(t){t.branch=t.branch||{},t.branch.label=t.branch.label||{},t.arrow=t.arrow||{},t.commit=t.commit||{},t.commit.dot=t.commit.dot||{},t.commit.message=t.commit.message||{},this.colors=t.colors||["#000000"],this.branch={color:t.branch.color,lineWidth:t.branch.lineWidth||2,mergeStyle:t.branch.mergeStyle||i.Bezier,spacing:s.numberOptionOr(t.branch.spacing,20),label:{display:s.booleanOptionOr(t.branch.label.display,!0),color:t.branch.label.color||t.commit.color,strokeColor:t.branch.label.strokeColor||t.commit.color,bgColor:t.branch.label.bgColor||"white",font:t.branch.label.font||t.commit.message.font||e.DEFAULT_FONT,borderRadius:s.numberOptionOr(t.branch.label.borderRadius,10)}},this.arrow={size:t.arrow.size||null,color:t.arrow.color||null,offset:t.arrow.offset||2},this.commit={color:t.commit.color,spacing:s.numberOptionOr(t.commit.spacing,25),hasTooltipInCompactMode:s.booleanOptionOr(t.commit.hasTooltipInCompactMode,!0),dot:{color:t.commit.dot.color||t.commit.color,size:t.commit.dot.size||3,strokeWidth:s.numberOptionOr(t.commit.dot.strokeWidth,0),strokeColor:t.commit.dot.strokeColor,font:t.commit.dot.font||t.commit.message.font||"normal 10pt Calibri"},message:{display:s.booleanOptionOr(t.commit.message.display,!0),displayAuthor:s.booleanOptionOr(t.commit.message.displayAuthor,!0),displayHash:s.booleanOptionOr(t.commit.message.displayHash,!0),color:t.commit.message.color||t.commit.color,font:t.commit.message.font||e.DEFAULT_FONT}},this.tag=t.tag||{}}}e.Template=n;const o=new n({colors:["#6963FF","#47E8D4","#6BDB52","#E84BA5","#FFA657"],branch:{color:"#000000",lineWidth:4,spacing:50,mergeStyle:i.Straight},commit:{spacing:60,dot:{size:16,strokeColor:"#000000",strokeWidth:4},message:{color:"black"}},arrow:{size:16,offset:-1.5}});e.blackArrowTemplate=o;const a=new n({colors:["#979797","#008fb5","#f1c109"],branch:{lineWidth:10,spacing:50},commit:{spacing:80,dot:{size:14},message:{font:"normal 14pt Arial"}}});var h;function c(t){return t?"string"==typeof t?{[h.BlackArrow]:o,[h.Metro]:a}[t]:t:a}e.metroTemplate=a,function(t){t.Metro="metro",t.BlackArrow="blackarrow"}(h||(h={})),e.TemplateName=h,e.templateExtend=function(t,e){const r=c(t);return e.branch||(e.branch={}),e.commit||(e.commit={}),{colors:e.colors||r.colors,arrow:Object.assign({},r.arrow,e.arrow),branch:Object.assign({},r.branch,e.branch,{label:Object.assign({},r.branch.label,e.branch.label)}),commit:Object.assign({},r.commit,e.commit,{dot:Object.assign({},r.commit.dot,e.commit.dot),message:Object.assign({},r.commit.message,e.commit.message)}),tag:Object.assign({},r.tag,e.tag)}},e.getTemplate=c},5834:function(t,e,r){var s=this&&this.__rest||function(t,e){var r={};for(var s in t)Object.prototype.hasOwnProperty.call(t,s)&&e.indexOf(s)<0&&(r[s]=t[s]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(s=Object.getOwnPropertySymbols(t);i<s.length;i++)e.indexOf(s[i])<0&&Object.prototype.propertyIsEnumerable.call(t,s[i])&&(r[s[i]]=t[s[i]])}return r};Object.defineProperty(e,"__esModule",{value:!0});const i=r(9536),n=r(254),o=r(7359);class a{constructor(t,e,r){this._branch=t,this.name=t.name,this._graph=e,this._onGraphUpdate=r}branch(t){if(this._branch.isDeleted()&&!this._isReferenced())throw new Error(`Cannot branch from the deleted branch "${this.name}"`);const e="string"==typeof t?{name:t}:t;return e.from=this,this._graph.createBranch(e).getUserApi()}commit(t){if(this._branch.isDeleted()&&!this._isReferenced())throw new Error(`Cannot commit on the deleted branch "${this.name}"`);return"string"==typeof t&&(t={subject:t}),t||(t={}),this._commitWithParents(t,[]),this._onGraphUpdate(),this}delete(){if(this._graph.refs.getCommit("HEAD")===this._graph.refs.getCommit(this.name))throw new Error(`Cannot delete the checked out branch "${this.name}"`);return[...function*(t,e){const r=(t,e)=>t.commits.find((({hash:t})=>t===e));let s=r(t,t.refs.getCommit(e.name));for(;s&&s.hash!==e.parentCommitHash;)yield s,s=r(t,s.parents[0])}(this._graph,this._branch)].forEach((t=>{t.refs=t.refs.filter((t=>t!==this.name))})),this._graph.refs.delete(this.name),this._graph.branches.delete(this.name),this._branch=n.createDeletedBranch(this._graph,this._branch.style,(()=>{})),this._onGraphUpdate(),this}merge(...t){if(this._branch.isDeleted()&&!this._isReferenced())throw new Error(`Cannot merge to the deleted branch "${this.name}"`);let e=t[0];(function(t){return"object"==typeof t&&!(t instanceof a)})(e)||(e={branch:t[0],fastForward:!1,commitOptions:{subject:t[1]}});const{branch:r,fastForward:s,commitOptions:i}=e,n="string"==typeof r?r:r.name,o=this._graph.refs.getCommit(n);if(!o)throw new Error(`The branch called "${n}" is unknown`);let h=!1;if(s){const t=this._graph.refs.getCommit(this._branch.name);t&&(h=this._areCommitsConnected(t,o))}return s&&h?this._fastForwardTo(o):this._commitWithParents(Object.assign({},i,{subject:i&&i.subject||`Merge branch ${n}`}),[o]),this._onGraphUpdate(),this}tag(t){if(this._branch.isDeleted()&&!this._isReferenced())throw new Error(`Cannot tag on the deleted branch "${this.name}"`);return"string"==typeof t?this._graph.getUserApi().tag({name:t,ref:this._branch.name}):this._graph.getUserApi().tag(Object.assign({},t,{ref:this._branch.name})),this}checkout(){if(this._branch.isDeleted()&&!this._isReferenced())throw new Error(`Cannot checkout the deleted branch "${this.name}"`);const t=this._branch,e=this._graph.refs.getCommit(t.name);return this._graph.currentBranch=t,e&&this._graph.refs.set("HEAD",e),this}_commitWithParents(t,e){const r=this._graph.refs.getCommit(this._branch.name);r?e.unshift(r):this._branch.parentCommitHash&&e.unshift(this._branch.parentCommitHash);const{tag:n}=t,o=s(t,["tag"]),a=new i.Commit(Object.assign({hash:this._graph.generateCommitHash(),author:this._branch.commitDefaultOptions.author||this._graph.author,subject:this._branch.commitDefaultOptions.subject||this._graph.commitMessage},o,{parents:e,style:this._getCommitStyle(t.style)}));if(r){this._graph.refs.getNames(r).forEach((t=>this._graph.refs.set(t,a.hash)))}else this._graph.refs.set(this._branch.name,a.hash);this._graph.commits.push(a),this.checkout(),n&&this.tag(n)}_areCommitsConnected(t,e){const r=this._graph.commits.find((({hash:t})=>e===t));if(!r)return!1;return!(0===r.parents.length)&&(!!r.parents.includes(t)||r.parents.some((e=>this._areCommitsConnected(t,e))))}_fastForwardTo(t){this._graph.refs.set(this._branch.name,t)}_getCommitStyle(t={}){return Object.assign({},o.withoutUndefinedKeys(this._graph.template.commit),o.withoutUndefinedKeys(this._branch.commitDefaultOptions.style),t,{message:Object.assign({},o.withoutUndefinedKeys(this._graph.template.commit.message),o.withoutUndefinedKeys(this._branch.commitDefaultOptions.style.message),t.message,o.withoutUndefinedKeys({display:this._graph.shouldDisplayCommitMessage&&void 0})),dot:Object.assign({},o.withoutUndefinedKeys(this._graph.template.commit.dot),o.withoutUndefinedKeys(this._branch.commitDefaultOptions.style.dot),t.dot)})}_isReferenced(){return this._graph.branches.has(this.name)||this._graph.refs.hasName(this.name)||this._graph.commits.reduce(((t,{refs:e})=>[...t,...e]),[]).includes(this.name)}}e.BranchUserApi=a},3455:function(t,e,r){Object.defineProperty(e,"__esModule",{value:!0});const s=r(9536),i=r(254),n=r(3755);e.GitgraphUserApi=class{constructor(t,e){this._graph=t,this._onGraphUpdate=e}clear(){return this._graph.refs=new n.Refs,this._graph.tags=new n.Refs,this._graph.commits=[],this._graph.branches=new Map,this._graph.currentBranch=this._graph.createBranch("master"),this._onGraphUpdate(),this}commit(t){return this._graph.currentBranch.getUserApi().commit(t),this}branch(t){return this._graph.createBranch(t).getUserApi()}tag(...t){let e,r,s,i,n;if("string"==typeof t[0]?(e=t[0],r=t[1]):(e=t[0].name,r=t[0].ref,s=t[0].style,i=t[0].render),!r){const t=this._graph.refs.getCommit("HEAD");if(!t)return this;r=t}if(this._graph.refs.hasCommit(r)&&(n=r),this._graph.refs.hasName(r)&&(n=this._graph.refs.getCommit(r)),!n)throw new Error(`The ref "${r}" does not exist`);return this._graph.tags.set(e,n),this._graph.tagStyles[e]=s,this._graph.tagRenders[e]=i,this._onGraphUpdate(),this}import(t){const e=new Error("Only `git2json` format is supported for imported data.");if(!Array.isArray(t))throw e;if(!t.every((t=>"object"==typeof t&&"object"==typeof t.author&&Array.isArray(t.refs))))throw e;const r=t.map((t=>Object.assign({},t,{style:Object.assign({},this._graph.template.commit,{message:Object.assign({},this._graph.template.commit.message,{display:this._graph.shouldDisplayCommitMessage})}),author:`${t.author.name} <${t.author.email}>`}))).reverse();this.clear(),this._graph.commits=r.map((t=>new s.Commit(t))),r.forEach((({refs:t,hash:e})=>{if(!t)return;if(!e)return;const r="tag: ";t.map((t=>t.split(r))).map((([t,e])=>e)).filter((t=>"string"==typeof t)).forEach((t=>this._graph.tags.set(t,e))),t.filter((t=>!t.startsWith(r))).forEach((t=>this._graph.refs.set(t,e)))}));const i=this._getBranches();return this._graph.commits.map((t=>this._withBranches(i,t))).reduce(((t,e)=>e.branches?(e.branches.forEach((e=>t.add(e))),t):t),new Set).forEach((t=>this.branch(t))),this._onGraphUpdate(),this}_withBranches(t,e){let r=Array.from((t.get(e.hash)||new Set).values());return 0===r.length&&(r=[i.DELETED_BRANCH_NAME]),e.setBranches(r)}_getBranches(){const t=new Map,e=[];return this._graph.refs.getAllNames().filter((t=>"HEAD"!==t)).forEach((r=>{const s=this._graph.refs.getCommit(r);for(s&&e.push(s);e.length>0;){const s=e.pop(),i=this._graph.commits.find((({hash:t})=>t===s)),n=t.get(s)||new Set;n.add(r),t.set(s,n),i&&i.parents&&i.parents.length>0&&e.push(i.parents[0])}})),t}}},7359:function(t,e,r){Object.defineProperty(e,"__esModule",{value:!0});const s=r(2721);function i(t,e){return Object.assign({},e.reduce(((e,r)=>Object.assign({},e,{[r]:t[r]})),{}))}function n(t){return void 0===t}e.booleanOptionOr=function(t,e){return"boolean"==typeof t?t:e},e.numberOptionOr=function(t,e){return"number"==typeof t?t:e},e.pick=i,e.debug=function(t,e){console.log(JSON.stringify(t.map((t=>i(t,e))),null,2))},e.isUndefined=n,e.withoutUndefinedKeys=function(t={}){return Object.keys(t).reduce(((e,r)=>n(t[r])?e:Object.assign({},e,{[r]:t[r]})),{})},e.arrowSvgPath=function(t,e,r){const i=r.style.dot.size,n=t.template.arrow.size,o=i+t.template.arrow.offset,a=Math.PI/7,h=function(t,e,r){const i=e.x-r.x,n=e.y-r.y,o=t.template.commit.spacing;let a,h;switch(t.orientation){case s.Orientation.Horizontal:a=n,h=-o;break;case s.Orientation.HorizontalReverse:a=n,h=o;break;case s.Orientation.VerticalReverse:a=-o,h=i;break;default:a=o,h=i}t.isVertical?Math.abs(n)>o&&(h=0):Math.abs(i)>o&&(a=0);t.reverseArrow&&(a*=-1,h*=-1);return Math.atan2(a,h)}(t,e,r),c=o*Math.cos(h),m=o*Math.sin(h),l=(o+n)*Math.cos(h-a),p=(o+n)*Math.sin(h-a),u=(o+n/2)*Math.cos(h),g=(o+n/2)*Math.sin(h),f=(o+n)*Math.cos(h+a),d=(o+n)*Math.sin(h+a);return`M${c},${m} L${l},${p} Q${u},${g} ${f},${d} L${f},${d}`}},8242:function(t,e,r){r.r(e),r.d(e,{default:function(){return P}});var s=r(8733),i=JSON.parse('[{"type":"spc","date":"1945-10","title":"상미당 설립"},{"type":"spc","date":"1968-06","title":"삼립식품공업(주)으로 상호 변경"},{"type":"spc","date":"1972-08","title":"한국인터내쇼날식품(주) 설립"},{"type":"spc","date":"1977-10","title":"한국인터내쇼날식품(주)에서 샤니로 상호 변경"},{"type":"spc","date":"1983-10","title":"샤니, 업계 최초 식품기술연구소 설립"},{"type":"spc","date":"1985-04","title":"미국 배스킨라빈스사와 기술제휴"},{"type":"spc","date":"1985-06","title":"비알코리아(주) 설립"},{"type":"spc","date":"1985-10","title":"(주)파리크라상 설립"},{"type":"spc","date":"1988-06","title":"배스킨라빈스 1호점 구반포점 개점"},{"type":"spc","date":"1988-06","title":"파리바게뜨 1호점 광화문점 개점"},{"type":"spc","date":"1992-04","title":"한불제과제빵학원 개원(現 SPC 컬리너리아카데미)"},{"type":"spc","date":"1993-10","title":"던킨도너츠와 기술제휴 계약"},{"type":"spc","date":"1994-01","title":"태인·샤니그룹 출범"},{"type":"spc","date":"1998-12","title":"던킨도너츠 명동점 개점"},{"type":"spc","date":"2000-06","title":"허영인 회장 국민훈장 석류장 수훈 (푸드뱅크 기여 공로)"},{"type":"spc","date":"2000-07","title":"해피포인트 카드 출시"},{"type":"spc","date":"2003-08","title":"창업자 허창성 명예회장 별세"},{"type":"spc","date":"2003-11","title":"이탈리아 에스프레소 전문점 ‘파스쿠찌’ 론칭"},{"type":"whyrano","date":"2022-11-04","title":"SPC삼립, 노동부 서류 무단촬영 사과... \\"깊이 반성\\"","link":"https://www.yna.co.kr/view/AKR20221105022200003?input=1195m"},{"type":"whyrano","date":"2010-02-17","title":"배스킨라빈스 경품 약속 미루다 망신살","link":"https://imnews.imbc.com/replay/2010/nwdesk/article/2567801_30521.html"},{"type":"misc","date":"2018-08-07","title":"SPC 3세 허희수 부사장, \'마약 혐의\' 구속... \\"경영서 배제\\"","link":"https://www.ytn.co.kr/_ln/0103_201808071809275716"},{"type":"misc","date":"2020-03-26","title":"[자막뉴스] 마약해서 물러난 SPC 3세, ‘빵’ 사려고 회사에?","link":"https://news.kbs.co.kr/news/view.do?ncd=4410730"},{"type":"misc","date":"2020-04-01","title":"[현장K] SPC 총수일가, 7억짜리 캐딜락 사적 운행 의혹","link":"https://news.kbs.co.kr/news/view.do?ncd=4415372"},{"type":"misc","date":"2021-09-21","title":"[단독]① 던킨도너츠 공장 제보 영상…반죽에 기름때·시럽통엔 까만 물질","link":"https://news.kbs.co.kr/news/view.do?ncd=5289989&ref=N"},{"type":"spc","date":"2022-06-07","title":"파리바게뜨의 힘... 프랑스 샌드위치 브랜드까지 품었다","link":"https://n.news.naver.com/article/009/0004974432"},{"type":"protest","date":"2022-06-07","title":"프랑스노총 “노동자 탄압으로 알려진 SPC”... 현지서 규탄집회 연다","link":"https://n.news.naver.com/article/028/0002593472"},{"type":"tragedy","date":"2022-10-15","title":"제빵공장서 20대 여성 소스배합 기계에 몸끼임 사망사고","link":"https://www.seoul.co.kr/news/newsView.php?id=20221015500022&wlog_tag3=naver"},{"type":"tragedy","date":"2022-10-23","title":"SPC 계열 \'샤니\' 제빵공장서 손 끼임 사고... 경찰 조사","link":"https://www.yna.co.kr/view/AKR20221023021100061?input=1195m"},{"type":"protest","date":"2022-03-28","title":"단식에 돌입한 파리바게뜨지회장 “더 이상 우리 조합원들을 괴롭히지 못하게 모든 것을 바치려고 합니다”","link":"http://worknworld.kctu.org/news/articleView.html?idxno=405301"},{"type":"protest","date":"2022-11-03","title":"SPC-노조, 검증기구 구성키로 합의…부당노동행위 관련 대표 사과”","link":"https://www.hani.co.kr/arti/society/labor/1065572.html"}]'),n=r(7294),o=r(6734);function a(t){var e=t.branch,r=t.commit,s=n.useState({textWidth:0,textHeight:0}),i=s[0],o=s[1],a=n.useCallback((function(t){if(t){var e=t.getBBox();o({textWidth:e.width,textHeight:e.height})}}),[]),c=i.textWidth+2*h.paddingX,m=i.textHeight+2*h.paddingY;return n.createElement("g",null,n.createElement("rect",{stroke:e.style.label.strokeColor||r.style.color,fill:e.style.label.bgColor,rx:e.style.label.borderRadius,width:c,height:m}),n.createElement("text",{ref:a,fill:e.style.label.color||r.style.color,style:{font:e.style.label.font},alignmentBaseline:"middle",dominantBaseline:"middle",x:h.paddingX,y:m/2},e.name))}var h=n.forwardRef((function(t,e){var r=t.branch,s=t.commit,i=t.branchLabelX;if(!r.style.label.display)return null;if(!t.gitgraph.branchLabelOnEveryCommit){var o=t.gitgraph.refs.getCommit(r.name);if(s.hash!==o)return null}if(s.branchToDisplay!==r.name)return null;var h=r.renderLabel?r.renderLabel(r):n.createElement(a,{branch:r,commit:s});if(t.gitgraph.isVertical)return n.createElement("g",{ref:e,transform:"translate("+(i||0)+", 0)"},h);var c=2*s.style.dot.size+10;return n.createElement("g",{ref:e,transform:"translate("+s.x+", "+c+")"},h)}));h.paddingX=10,h.paddingY=5;var c,m=(c=function(t,e){return c=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])},c(t,e)},function(t,e){function r(){this.constructor=t}c(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}),l=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.state={textWidth:0},e.$text=n.createRef(),e}return m(e,t),e.prototype.componentDidMount=function(){this.setState({textWidth:this.$text.current.getBBox().width})},e.prototype.render=function(){if(this.props.commit.renderTooltip)return this.props.commit.renderTooltip(this.props.commit);var t=2*this.props.commit.style.dot.size,r=10,s=e.padding,i=r+this.state.textWidth+2*s,o=["M 0,0","L 10,10","V 20","Q 10,25 15,25","H "+(i-5),"Q "+i+",25 "+i+",20","V -20","Q "+i+",-25 "+(i-5)+",-25","H 15","Q 10,-25 10,-20","V -10","z"].join(" ");return n.createElement("g",{transform:"translate("+t+", "+t/2+")"},n.createElement("path",{d:o,fill:"#EEE"}),n.createElement("text",{ref:this.$text,x:r+s,y:0,alignmentBaseline:"central",fill:"#333"},this.props.children))},e.padding=10,e}(n.Component),p=function(t){var e=t.commit,r=t.onMouseOver,s=t.onMouseOut;return e.renderDot?e.renderDot(e):n.createElement(n.Fragment,null,n.createElement("defs",null,n.createElement("circle",{id:e.hash,cx:e.style.dot.size,cy:e.style.dot.size,r:e.style.dot.size,fill:e.style.dot.color}),n.createElement("clipPath",{id:"clip-"+e.hash},n.createElement("use",{xlinkHref:"#"+e.hash}))),n.createElement("g",{onClick:e.onClick,onMouseOver:r,onMouseOut:s},n.createElement("use",{xlinkHref:"#"+e.hash,clipPath:"url(#clip-"+e.hash+")",stroke:e.style.dot.strokeColor,strokeWidth:e.style.dot.strokeWidth&&2*e.style.dot.strokeWidth}),e.dotText&&n.createElement("text",{alignmentBaseline:"central",textAnchor:"middle",x:e.style.dot.size,y:e.style.dot.size,style:{font:e.style.dot.font}},e.dotText)))},u=function(){var t=function(e,r){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])},t(e,r)};return function(e,r){function s(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(s.prototype=r.prototype,new s)}}(),g=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return u(e,t),e.prototype.render=function(){var t=this,e=this.props.commits.find((function(e){return e.hash===t.props.parentHash}));if(!e)return null;var r=this.props.gitgraph.reverseArrow?{x:this.props.commitRadius+(e.x-this.props.commit.x),y:this.props.commitRadius+(e.y-this.props.commit.y)}:{x:this.props.commitRadius,y:this.props.commitRadius};return n.createElement("g",{transform:"translate("+r.x+", "+r.y+")"},n.createElement("path",{d:(0,o.vz)(this.props.gitgraph,e,this.props.commit),fill:this.props.gitgraph.template.arrow.color}))},e}(n.Component),f=n.forwardRef((function(t,e){var r=t.commit,s=t.messageX;if(r.renderMessage)return n.createElement("g",{ref:e,transform:"translate("+s+", 0)"},r.renderMessage(r));var i=null;r.body&&(i=n.createElement("foreignObject",{width:"600",x:"10"},n.createElement("p",null,r.body)));var o=r.style.dot.size;return n.createElement("g",{ref:e,transform:"translate("+s+", "+o+")"},n.createElement("text",{alignmentBaseline:"central",fill:r.style.message.color,style:{font:r.style.message.font},onClick:r.onMessageClick},r.message),i)}));function d(t){var e=n.useState({textWidth:0,textHeight:0}),r=e[0],s=e[1],i=n.useRef(null);n.useEffect((function(){var t=i.current.getBBox();s({textWidth:t.width,textHeight:t.height})}),[]);var o=t.tag,a=o.style.pointerWidth,h=o.style.borderRadius,c=a+r.textWidth+20,m=r.textHeight+10,l=["M 0,0","L "+a+","+m/2,"V "+m/2,"Q "+a+","+m/2+" "+(a+h)+","+m/2,"H "+(c-h),"Q "+c+","+m/2+" "+c+","+(m/2-h),"V "+-(m/2-h),"Q "+c+",-"+m/2+" "+(c-h)+",-"+m/2,"H "+(a+h),"Q "+a+",-"+m/2+" "+a+",-"+m/2,"V -"+m/2,"z"].join(" ");return n.createElement("g",null,n.createElement("path",{d:l,fill:o.style.bgColor,stroke:o.style.strokeColor}),n.createElement("text",{ref:i,fill:o.style.color,style:{font:o.style.font},alignmentBaseline:"middle",dominantBaseline:"middle",x:a+10,y:0},o.name))}var y=n.forwardRef((function(t,e){var r=t.tag,s=t.commit,i=t.tagX;return n.createElement("g",{ref:e,transform:"translate("+(i||0)+", "+s.style.dot.size+")"},r.render?r.render(r.name,r.style):n.createElement(d,{tag:r}))})),b=function(t){var e=t.commit,r=t.commits,s=t.gitgraph,i=t.commitMessagesX,a=n.useRef(),c=n.useRef([]),m=n.useRef(),u=n.useState(0),d=u[0],b=u[1],w=n.useState([]),O=w[0],C=w[1],_=n.useState(0),v=_[0],x=_[1],E=n.useMemo((function(){if(!s.template.arrow.size)return null;var t=e.style.dot.size;return e.parents.map((function(i){return n.createElement(g,{key:i,commits:r,commit:e,gitgraph:s,parentHash:i,commitRadius:t})}))}),[r,e,s]),M=n.useMemo((function(){return Array.from(s.branches.values()).map((function(t){return n.createElement(h,{key:t.name,gitgraph:s,branch:t,commit:e,ref:a,branchLabelX:d})}))}),[s,e,d]),k=n.useMemo((function(){return c.current=[],e.tags?s.isHorizontal?null:e.tags.map((function(t,r){return n.createElement(y,{key:e.hashAbbrev+"-"+t.name,commit:e,tag:t,ref:function(t){return c.current[r]=t},tagX:O[r]||0})})):null}),[e,s,O]),R=t.getWithCommitOffset(e),B=R.x,P=R.y;return n.useLayoutEffect((function(){if(!s.isHorizontal){var t=i;if(a.current){b(t);var e=a.current.getBBox().width+h.paddingX;t+=e+10}var r=c.current.map((function(e){if(!e)return 0;var r=t,s=e.getBBox().width+10;return t+=s+10,r}));C(r),m.current&&x(t)}}),[c,s,i]),t.currentCommitOver===e&&(t.gitgraph.isHorizontal||t.gitgraph.mode===o.AR.Compact&&e.style.hasTooltipInCompactMode)&&t.setTooltip(n.createElement("g",{transform:"translate("+B+", "+P+")"},n.createElement(l,{commit:e},e.hashAbbrev," - ",e.subject))),n.createElement("g",{transform:"translate("+B+", "+P+")"},n.createElement(p,{commit:e,onMouseOver:function(){t.setCurrentCommitOver(e),e.onMouseOver()},onMouseOut:function(){t.setCurrentCommitOver(null),t.setTooltip(null),e.onMouseOut()}}),E,n.createElement("g",{transform:"translate("+-B+", 0)"},e.style.message.display&&n.createElement(f,{commit:e,ref:m,messageX:v}),M,k))},w=function(){var t=function(e,r){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])},t(e,r)};return function(e,r){function s(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(s.prototype=r.prototype,new s)}}(),O=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return w(e,t),e.prototype.render=function(){var t=this;return n.createElement("path",{d:(0,o.Sx)(this.props.coordinates.map((function(e){return e.map((function(e){return t.props.getWithCommitOffset(e)}))})),this.props.isBezier,this.props.gitgraph.isVertical),fill:"none",stroke:this.props.branch.computedColor,strokeWidth:this.props.branch.style.lineWidth,transform:"translate("+this.props.offset+", "+this.props.offset+")"})},e}(n.Component),C=function(){var t=function(e,r){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])},t(e,r)};return function(e,r){function s(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(s.prototype=r.prototype,new s)}}();function _(t){return"graph"in t}var v=function(t){function e(e){var r=t.call(this,e)||this;return r.$graph=n.createRef(),r.$commits=n.createRef(),r.$tooltip=null,r.state={commits:[],branchesPaths:new Map,commitMessagesX:0,commitYWithOffsets:{},shouldRecomputeOffsets:!0,currentCommitOver:null},r.gitgraph=_(e)?e.graph:new o.vN(e.options),r.gitgraph.subscribe((function(t){var e=t.commits,s=t.branchesPaths,i=t.commitMessagesX;r.setState({commits:e,branchesPaths:s,commitMessagesX:i,shouldRecomputeOffsets:!0})})),r}return C(e,t),e.prototype.render=function(){var t=this;return n.createElement("svg",{ref:this.$graph},n.createElement("g",{transform:"translate("+h.paddingX+", "+l.padding+")"},this.renderBranchesPaths(),n.createElement("g",{ref:this.$commits},this.state.commits.map((function(e){return n.createElement(b,{key:e.hash,commits:t.state.commits,commit:e,currentCommitOver:t.state.currentCommitOver,setCurrentCommitOver:t.setCurrentCommitOver.bind(t),gitgraph:t.gitgraph,getWithCommitOffset:t.getWithCommitOffset.bind(t),setTooltip:t.setTooltip.bind(t),commitMessagesX:t.state.commitMessagesX})}))),this.$tooltip))},e.prototype.componentDidMount=function(){_(this.props)||this.props.children(this.gitgraph.getUserApi())},e.prototype.componentDidUpdate=function(){if(this.$graph.current){var t=this.$graph.current.getBBox(),e=t.height,r=t.width;this.$graph.current.setAttribute("width",(r+l.padding+h.paddingX).toString()),this.$graph.current.setAttribute("height",(e+l.padding+h.paddingY).toString())}if(this.state.shouldRecomputeOffsets&&this.$commits.current){var s=Array.from(this.$commits.current.children);this.setState({commitYWithOffsets:this.computeOffsets(s),shouldRecomputeOffsets:!1})}},e.prototype.setCurrentCommitOver=function(t){this.setState({currentCommitOver:t})},e.prototype.setTooltip=function(t){this.$tooltip=t},e.prototype.renderBranchesPaths=function(){var t=this,e=this.gitgraph.template.commit.dot.size,r=this.gitgraph.template.branch.mergeStyle===o.CV.Bezier;return Array.from(this.state.branchesPaths).map((function(s){var i=s[0],o=s[1];return n.createElement(O,{key:i.name,gitgraph:t.gitgraph,branch:i,coordinates:o,getWithCommitOffset:t.getWithCommitOffset.bind(t),isBezier:r,offset:e})}))},e.prototype.computeOffsets=function(t){var e=0;return(this.gitgraph.orientation===o.i5.VerticalReverse?t:t.reverse()).reduce((function(t,r){var s=parseInt(r.getAttribute("transform").split(",")[1].slice(0,-1),10),i=r.getElementsByTagName("foreignObject")[0],n=i&&i.firstElementChild,o=0;if(n){var a=n.getBoundingClientRect().height,h=window.getComputedStyle(n).marginTop||"0px";o=a+parseInt(h.replace("px",""),10)}return i&&i.setAttribute("height",o+"px"),t[s]=s+e,e+=o,t}),{})},e.prototype.getWithCommitOffset=function(t){var e=t.x,r=t.y;return{x:e,y:this.state.commitYWithOffsets[r]||r}},e.defaultProps={options:{}},e}(n.Component);function x(t){let{branch:e,commit:r}=t;const[s,i]=n.useState({textWidth:0,textHeight:0}),o=n.useCallback((t=>{if(!t)return;const e=t.getBBox();i({textWidth:e.width,textHeight:e.height})}),[]),a=s.textWidth+2*E.paddingX,h=s.textHeight+2*E.paddingY;return n.createElement("g",null,n.createElement("rect",{stroke:e.style.label.strokeColor||r.style.color,fill:e.style.label.bgColor,rx:e.style.label.borderRadius,width:a,height:h}),n.createElement("text",{ref:o,fill:e.style.label.color||r.style.color,style:{font:e.style.label.font},alignmentBaseline:"middle",dominantBaseline:"middle",x:E.paddingX,y:h/2},e.name))}const E=n.forwardRef(((t,e)=>{const{branch:r,commit:s,branchLabelX:i}=t;if(!r.style.label.display)return null;if(!t.gitgraph.branchLabelOnEveryCommit){const e=t.gitgraph.refs.getCommit(r.name);if(s.hash!==e)return null}if(s.branchToDisplay!==r.name)return null;const o=r.renderLabel?r.renderLabel(r):n.createElement(x,{branch:r,commit:s});if(t.gitgraph.isVertical)return n.createElement("g",{ref:e,transform:"translate("+(i||0)+", 0)"},o);{const t=2*s.style.dot.size+10;return n.createElement("g",{ref:e,transform:"translate("+s.x+", "+t+")"},o)}}));E.paddingX=10,E.paddingY=5;const M=E.paddingX,k=E.paddingY,R={template:(0,o.Zx)("metro",{colors:["gray","skyblue","turquoise","#0055A4","#EF4135","black"],commit:{message:{displayAuthor:!1,displayHash:!1}}})},B=t=>{var e=null,r=(0,n.useState)({textWidth:0,textHeight:0}),s=r[0],i=r[1],o=(0,n.useCallback)((function(t){if(t){var e=t.getBBox();i({textWidth:e.width,textHeight:e.height})}}),[]),a=s.textWidth+2*M,h=s.textHeight+2*k,c=(0,n.createElement)("rect",{stroke:t.style.color,fill:"white",rx:M,width:a,height:h});e=t.body?(0,n.createElement)("a",{href:t.body,target:"_blank"},(0,n.createElement)("text",{ref:o,fill:"black",style:{font:t.style.message.font},alignmentBaseline:"middle",dominantBaseline:"middle",x:M,y:h/2},t.message)):(0,n.createElement)("text",{ref:o,fill:"black",style:{font:t.style.message.font},alignmentBaseline:"middle",dominantBaseline:"middle",x:M,y:h/2},t.message);return(0,n.createElement)("g",{transform:"translate(0, 0)"},c,e,null)};function P(){return(0,s.tZ)("div",{sx:{width:"100%",height:"auto"},id:"branchBox"},(0,s.tZ)("div",{id:"timeline",sx:{width:"100%",overflowX:"scroll",height:"100%"}},(0,s.tZ)(v,{options:R},(t=>{const e=t.branch("spc");var r={spc:e};i.sort(((t,e)=>(""+t.date).localeCompare(e.date))).map((t=>{const s=t.type;r[s]||(r[s]=e.branch(s)),r[s].commit({subject:t.title,tag:t.date,body:t.link,renderMessage:B})}))}))))}},8733:function(t,e,r){r.d(e,{tZ:function(){return s}});var s=r(2396).tZ}}]);
//# sourceMappingURL=component---src-pages-archive-branch-tsx-75ce08169f71373941c6.js.map